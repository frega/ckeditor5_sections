{"version":3,"sources":["webpack://SectionsEditor/webpack/universalModuleDefinition","webpack://SectionsEditor/webpack/bootstrap","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/global/window.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-element/lib/css-tag.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-element/lib/decorators.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-element/lib/updating-element.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-element/lit-element.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/default-template-processor.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/directive.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/dom.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/modify-template.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/part.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/parts.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/render.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/shady-render.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/template-factory.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/template-instance.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/template-result.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lib/template.js","webpack://SectionsEditor//home/frega/workspace/evaluate/ckeditor5_sections/node_modules/lit-html/lit-html.js","webpack://SectionsEditor/./components/components/accordion/collapse.js","webpack://SectionsEditor/./components/components/accordion/index.js","webpack://SectionsEditor/./components/components/base/editor-element/editor-element.js","webpack://SectionsEditor/./components/components/base/placeholder/index.js","webpack://SectionsEditor/./components/components/base/placeholder/placeholder.js","webpack://SectionsEditor/./components/components/button/button-conflict-option/button_conflict_option.css","webpack://SectionsEditor/./components/components/button/button-conflict-option/button_conflict_option.js","webpack://SectionsEditor/./components/components/button/button-conflict.js","webpack://SectionsEditor/./components/components/button/button.js","webpack://SectionsEditor/./components/components/button/index.js","webpack://SectionsEditor/./components/components/container/container.js","webpack://SectionsEditor/./components/components/container/index.js","webpack://SectionsEditor/./components/components/gallery/gallery.js","webpack://SectionsEditor/./components/components/gallery/index.js","webpack://SectionsEditor/./components/components/heading/heading.js","webpack://SectionsEditor/./components/components/heading/index.js","webpack://SectionsEditor/./components/components/media/index.js","webpack://SectionsEditor/./components/components/media/media.js","webpack://SectionsEditor/./components/components/media_conflict/index.js","webpack://SectionsEditor/./components/components/media_conflict/media_conflict.css","webpack://SectionsEditor/./components/components/media_conflict/media_conflict.js","webpack://SectionsEditor/./components/components/media_conflict/media_conflict_option/media_conflict_option.css","webpack://SectionsEditor/./components/components/media_conflict/media_conflict_option/media_conflict_option.js","webpack://SectionsEditor/./components/components/section/index.js","webpack://SectionsEditor/./components/components/section/section.js","webpack://SectionsEditor/./components/components/select/index.js","webpack://SectionsEditor/./components/components/select/select.js","webpack://SectionsEditor/./components/components/tabs/icons/pencil.svg","webpack://SectionsEditor/./components/components/tabs/index.js","webpack://SectionsEditor/./components/components/tabs/tabs.js","webpack://SectionsEditor/./components/components/text_conflict/index.js","webpack://SectionsEditor/./components/components/text_conflict/text_conflict.css","webpack://SectionsEditor/./components/components/text_conflict/text_conflict.js","webpack://SectionsEditor/./components/components/text_conflict/text_conflict_option/text_conflict_option.css","webpack://SectionsEditor/./components/components/text_conflict/text_conflict_option/text_conflict_option.js","webpack://SectionsEditor/./components/components/textfield/index.js","webpack://SectionsEditor/./components/components/textfield/textfield.js","webpack://SectionsEditor/./components/components/accordion/collapse.css","webpack://SectionsEditor/./components/components/base/placeholder/icons/accordion.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/button-list.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/carousel.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/close.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/formatted-text.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/image.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/misc.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/text-media.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/text.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/two-columns.svg","webpack://SectionsEditor/./components/components/base/placeholder/icons/video.svg","webpack://SectionsEditor/./components/components/base/placeholder/placeholder.css","webpack://SectionsEditor/./components/components/gallery/gallery.css","webpack://SectionsEditor/./components/components/gallery/icons/leftArrow.svg","webpack://SectionsEditor/./components/components/gallery/icons/rightArrow.svg","webpack://SectionsEditor/./components/components/gallery/icons/trash.svg","webpack://SectionsEditor/./components/components/media/media.css","webpack://SectionsEditor/./components/components/tabs/modal.css","webpack://SectionsEditor/./components/components/tabs/tabs.css","webpack://SectionsEditor/./components/components/textfield/textfield.css","webpack://SectionsEditor/(webpack)/buildin/global.js","webpack://SectionsEditor/./src/components.js"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;;AAEA;;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mC;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2BAA2B,YAAY;AACvC;AACA,SAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;ACpMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,KAAK;AACpE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACboBAAoB,YAAY;AAChC,wBAAwB,IAAI;AAC5B,iBAAiB,QAAQ;AACziBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;AChnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0C;AACY;AACM;AAClB;AACN;AACgD;AACrB;AAC9B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yBAAyB,wEAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2EAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,uDAAc;AACpD;AACA,0DAA0D,gDAAgD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,yBAAyB;AACpC,WAAW,OAAO;AAClB;AACA;AACA,oBAAoB,mEAAM;AAC1B,uC;;;;;;;;;;;;AC5MA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8G;AAC9G;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2DAAiB;AACnD;AACA;AACA;AACA,wBAAwB,mDAAS;AACjC;AACA;AACA,wBAAwB,8DAAoB;AAC5C;AACA,8BAA8B,4DAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAQ;AAC3B;AACA;AACO;AACP,sD;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC,KAAK,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACO;AACP;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA,qC;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqD;AACrD,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,WAAW,UAAU,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA,YAAY,yEAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,WAAW,UAAU,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;AC/HA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gC;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;AACN;AACO;AACY;AACJ;AACT;AACtC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB,iDAAQ;AAC9B;AACA;AACA;AACA;AACA,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,yBAAyB,iDAAQ;AACjC;AACA;AACA,2BAA2B,iDAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iEAAY;AAC3D,6CAA6C,iEAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iEAAY;AACnD,qCAAqC,iEAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iEAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA;AACA,sBAAsB,iDAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAO;AAClC,yBAAyB,gDAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sEAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA,oCAAoC,iDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,kCAAkC,iDAAQ;AAC1C;AACA;AACA,oCAAoC,iDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uDAAuD;AAChE;AACA,iC;;;;;;;;;;;;AC/bA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuC;AACD;AACkB;AACjD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,QAAQ,2DAAW;AACnB,wCAAwC,kDAAQ,gBAAgB,CAAC,qFAAe,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACuC;AACgD;AAC9B;AACF;AACG;AACT;AACU;AAC3D;AACA,oDAAoD,KAAK,IAAI,UAAU;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,wBAAwB,mEAAc;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,mEAAc;AACtB;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAc;AACxC;AACA;AACA,uBAAuB,WAAW,UAAU,EAAE;AAC9C;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,mFAAuB;AACvC,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kFAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mFAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,wBAAwB,gDAAK;AAC7B;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,IAAI,yDAAS,yCAAyC,mDAAmD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gDAAK;AAC1B,QAAQ,gDAAK;AACb;AACA;AACA;AACA;AACA;AACA,+CAA+C,sEAAgB;AAC/D;AACA;AACA;AACA,QAAQ,2DAAW;AACnB;AACA,QAAQ,gDAAK;AACb;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;AC9RA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAM;AAC1C;AACA;AACA;AACA;AACA,uBAAuB,qDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4C;;;;;;;;;;;;AC/CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACa;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAY;AACrC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,mFAAmF,qBAAqB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yEAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oDAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;ACxIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACwD;AACjG;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mEAAsB;AACzD;AACA;AACA;AACA,yDAAyD,MAAM;AAC/D,8BAA8B,MAAM;AACpC;AACA,gDAAgD,mDAAM,GAAG,uDAAU;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iEAAoB;AAC5D,oBAAoB,mDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAa;AACrB;AACA;AACA;AACA,2C;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,MAAM,iCAAiC;AAChE;AACA;AACA;AACA;AACO,0BAA0B,OAAO;AACjC,kCAAkC,OAAO,GAAG,WAAW;AAC9D;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,0FAA0F,qBAAqB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB,SAAS,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAmD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+BAA+B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oC;;;;;;;;;;;;ACpsH;AACxH;AAC4B;AACd;AACe;AACI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yCAAyC,sEAAc,0BAA0B,2FAAwB;AAChH;AACA;AACA;AACA;AACO,wCAAwC,yEAAiB,yBAAyB,2FAAwB;AACjH,oC;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACQ;AACP;;AAE1B,uBAAuB,wDAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,UAAU,+DAAM;AAChB;;AAEA,gCAAgC,kCAAkC;AAClE;AACA;AACA;AACA;;AAEA,oDAAoD,oBAAoB;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAA4B;AACM;;AAElC,6CAAM,sCAAsC,iDAAQ;;;;;;;;;;;;;ACHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;;AAElC;;AAEP;AACA,qCAAqC,SAAS;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe,4BAA4B,sDAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA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AAC5B,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,UAAU,kEAAM;AAChB;AACA,oCAAoC,oBAAoB;AACxD,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAAM;;;;;;;;;;;;;AC9CN;AAAA;AAAA;AAAA;AAAA;AAA6C;AACf;AAC2B;;AAEzD,iBAAiB,+CAAG;AACpB;AACA;AACA;AACA;;AAEe,6BAA6B,+CAAM;AAClD;AACA;AACA,eAAe,yCAAyC;AACxD;AACA,wBAAwB,eAAe;AACvC,oBAAoB,gBAAgB;AACpC,cAAc,eAAe;AAC7B,aAAa,eAAe;AAC5B,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,WAAW,gDAAI;AACf;AACA,wBAAwB,sCAAsC,GAAG;AACjE;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,oBAAoB,0CAA0C;AAC9D,wBAAwB,gCAAgC;AACxD;AACA,YAAY;AACZ;AACA,UAAU;AACV,YAAY,gDAAI;AAChB;AACA,kBAAkB;AAClB,0BAA0B,gDAAI;AAC9B;AACA,6BAA6B;AAC7B,+BAA+B;AAC/B;AACA,8DAA8D,UAAU;AACxE;AACA,wCAAwC;AACxC;AACA;AACA,yCAAyC;AACzC;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA,wBAAwB,+CAAG;AAC3B,IAAI,+CAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjKA;AAAA;AAAA;AAAA;AAA6C;AACqB;;AAElE,iBAAiB,+CAAG;AACpB;AACA;AACA;AACA;;AAEe,qBAAqB,2EAAa;AACjD;AACA;AACA,eAAe,yCAAyC;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,wBAAwB,sCAAsC,GAAG;AACjE;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,0BAA0B,2CAA2C;AACrE,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,gBAAgB,+CAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACzKA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACE;AACiB;;AAE/C,6CAAM,oCAAoC,wDAAc;;;;;;;;;;;;;ACJxD;AAAA;AAAA;AAAA;AAAmC;AAC+B;;AAEnD,wBAAwB,2EAAa;AACpD;AACA;AACA,iBAAiB,yCAAyC;AAC1D,yBAAyB,eAAe;AACxC,YAAY,oCAAoC;AAChD,YAAY,oCAAoC;AAChD,eAAe,wCAAwC;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA,YAAY,gDAAI;AAChB;AACA,sCAAsC,mBAAmB;AACzD,2BAA2B,aAAa;AACxC,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAA4B;AACQ;;AAEpC,6CAAM,uCAAuC,kDAAS;;;;;;;;;;;;;ACHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACO;;AAEU;AACE;AACL;AACY;;AAEnD,sBAAsB,2EAAa;AAClD;AACA;AACA;AACA,oBAAoB,6CAA6C;AACjE,yBAAyB,eAAe;AACxC,iBAAiB,oCAAoC;AACrD,iBAAiB,yCAAyC;AAC1D,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,2EAAa;AAC1C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2EAAa;AAC7C;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,UAAU,8DAAM;AAChB;;AAEA,+BAA+B,+BAA+B,GAAG,sBAAsB;AACvF;AACA;AACA,yCAAyC,wBAAwB;AACjE;AACA;AACA,YAAY;AACZ,cAAc,gDAAI;AAClB;AACA,wCAAwC,mBAAmB;AAC3D,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA,2CAA2C,sBAAsB;AACjE;AACA;AACA,gBAAgB;AAChB,gBAAgB;AAChB;AACA,kBAAkB,gDAAI;AACtB;AACA,gCAAgC,qBAAqB;AACrD,+CAA+C;AAC/C;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,cAAc,gDAAI;AAClB;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA,6EAA6E;AAC7E;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,wBAAwB,uDAAG,EAAE,sEAAQ;AACrC;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,wBAAwB,uDAAG,EAAE,uEAAS;AACtC;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,wBAAwB,uDAAG,EAAE,kEAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,kBAAkB,sCAAsC;AACxD,sCAAsC;AACtC;AACA,eAAe,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A;AACA;AACA;;AAEA,iBAAiB,4CAAG;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,4CAAG;AACtB;AACA;AACA;AACA;;AAEA,sBAAsB,4CAAG;AACzB;AACA;AACA;AACA;;AAEA,oBAAoB,4CAAG;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe,sBAAsB,2EAAa;AAClD;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,gBAAgB,gBAAgB;;AAEhC;AACA,oBAAoB,gBAAgB;AACpC,uBAAuB,eAAe;AACtC,qBAAqB,eAAe;AACpC,uBAAuB,eAAe;AACtC,0BAA0B,eAAe;AACzC,kBAAkB,gBAAgB;AAClC,cAAc,gBAAgB;AAC9B,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,6CAAM;AACd;AACA;AACA,MAAM,6CAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,6CAAM;AACd;AACA;AACA;AACA;AACA,MAAM,6CAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,gCAAgC,6CAAI;AACpC;AACA,gCAAgC,2CAA2C;AAC3E,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,6CAAI;AACzB;AACA,mBAAmB,uCAAuC;AAC1D,kBAAkB,uBAAuB;AACzC;AACA,UAAU;AACV;AACA;;AAEA,uBAAuB,6CAAI;AAC3B;AACA,mBAAmB,sCAAsC;AACzD,kBAAkB,yBAAyB;AAC3C;AACA,UAAU;AACV;AACA;;AAEA,WAAW,6CAAI;AACf,oBAAoB,gCAAgC;AACpD,UAAU;AACV,YAAY,6CAAI;AAChB,gBAAgB;AAChB;AACA,kBAAkB,6CAAI;AACtB;AACA;AACA,4CAA4C,mCAAmC;AAC/E,kCAAkC,uBAAuB;AACzD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,6CAAI;AACtB;AACA,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA,kCAAkC,4BAA4B;AAC9D;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,kCAAkC,2BAA2B;AAC7D;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,sBAAsB,+BAA+B;AACrD,YAAY;AACZ,cAAc,6CAAI;AAClB,sCAAsC,iCAAiC;AACvE;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6CAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,+CAAG;AACpvcA;AAAA;AAAA;AAAA;AAA4B;AACE;;AAE9B,6CAAM,oCAAoC,+CAAM;;;;;;;;;;;;;ACHhD;AAAA;AAAA;AAAA;AAAA;AAAkC;AACF;AACkC;;AAEnD,qBAAqB,2EAAa;AACjD;AACA;AACA,gBAAgB,wCAAwC;AACxD,qBAAqB,eAAe;AACpC,iBAAiB,2CAA2C;AAC5D,eAAe,gBAAgB;AAC/B,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA,cAAc,6CAAI;AAClB,qBAAqB,gBAAgB,GAAG,KAAK;AAC7C;AACA;AACA,oBAAoB,6CAAI,cAAc,kBAAkB;AACxD,WAAW,6CAAI;AACf;AACA,6BAA6B,WAAW;AACxC,uCAAuC,iBAAiB;AACxD,YAAY;AACZ;AACA,6BAA6B,gCAAgC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,WAAW,+CAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvGA,qP;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAA4B;AACS;;AAErC,6CAAM,kCAAkC,6CAAI;AAC5C,6CAAM,wCAAwC,2CAAK;;;;;;;;;;;;;ACJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAClB;AACU;AACM;AACR;AACwB;;AAEnD,mBAAmB,2EAAa;AAC/C;AACA;AACA,iBAAiB,yCAAyC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,uDAAM;AACV;;AAEA;AACA;AACA,IAAI,uDAAM;AACV;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,4BAA4B;AAC5B;AACA,UAAU;AACV,2BAA2B;AAC3B;AACA,UAAU;AACV,sBAAsB,wBAAwB;AAC9C,wBAAwB,kCAAkC;AAC1D,0BAA0B,oCAAoC;AAC9D,wBAAwB,gBAAgB;AACxC,wBAAwB,oCAAoC;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA,UAAU,2DAAM;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,gBAAgB,gDAAI;AACpB;AACA,8BAA8B,qBAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,cAAc,gDAAI;AAClB;AACA,wCAAwC,mBAAmB;AAC3D,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,kBAAkB,mCAAmC;AACrD,0CAA0C;AAC1C;AACA;AACA,UAAU,yCAAyC;AACnD;AACA,UAAU;AACV,UAAU;AACV,YAAY,gDAAI;AAChB;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA,kBAAkB,uDAAG,EAAE,wDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,8BAA8B;AACpE;AACA;AACA;AACA;AACA;;AAEO,oBAAoB,sDAAU;AACrC;AACA;AACA,kBAAkB,+BAA+B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAC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A;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C,eAAe;AAC3D;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,GAAG;AACnD;;AAEA;AACA,WAAW,gDAAI;AACf;AACA,UAAU,gEAAM;AAChB;;AAEA;AACA,8BAA8B;AAC9B;AACA,eAAe;AACf;AACA,UAAU;AACV,YAAY,gDAAI;AAChB,2DAA2D,YAAY;AACvE;AACA;AACA,UAAU;AACV,YAAY,gDAAI;AAChB;AACA,kBAAkB;AAClB;AACA;AACA;AACA,UAAU;AACV,YAAY,gDAAI;AAChB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC/NA,yBAAyB,yBAA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","file":"components.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SectionsEditor\"] = factory();\n\telse\n\t\troot[\"SectionsEditor\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/components.js\");\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? marker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.1');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","import { html, svg } from \"lit-element\";\nimport styles from \"!raw-loader!./collapse.css\";\nimport Section from \"../section/section\";\n\nexport default class Collapse extends Section {\n  static get properties() {\n    return {\n      collapseIsOpen: {\n        type: Boolean\n      }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.collapseIsOpen == null) {\n      this.collapseIsOpen = false;\n    }\n  }\n\n  toggleCollapse() {\n    this.collapseIsOpen = !this.collapseIsOpen;\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n\n      <div class=\"ck-collapse ${this.collapseIsOpen ? \"open\" : \"\"}\">\n        <div class=\"ck-collapse__header\">\n          <div class=\"ck-collapse__title\">\n            <slot name=\"title\"></slot>\n          </div>\n\n          <div class=\"ck-collapse__action\" @click=${this.toggleCollapse}></div>\n        </div>\n\n        <div class=\"ck-collapse__body\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n","import global from \"global\";\nimport Collapse from \"./collapse\";\n\nglobal.customElements.define(\"ck-collapse\", Collapse);\n","import { LitElement } from \"lit-element\";\n\nexport const eventType = \"ckEditorOperation\";\n\nfunction createEvent(detail) {\n  return new CustomEvent(eventType, { detail });\n}\n\nclass EditorProxy {\n  /**\n   * @param element\n   */\n  constructor(element) {\n    this.element = element;\n    this.operations = [];\n  }\n\n  /**\n   * Insert a new section.\n   *\n   * @param section\n   *   The section name to insert.\n   * @param parent\n   *   The parent element.\n   * @param position\n   *   The position. \"end\" to append it to the parent, \"before\" to insert it before the reference element.\n   * @param reference\n   *   Reference element when using \"before\" as a position value.\n   * @param attributes\n   *   A dictionary of attributes that will be applied to the new element.\n   */\n  insert(section, parent, position, reference = null, attributes = null) {\n    this.element.dispatchEvent(\n      createEvent({\n        operation: \"insert\",\n        section,\n        parent,\n        position,\n        reference,\n        attributes\n      })\n    );\n  }\n\n  /**\n   * Move an element.\n   *\n   * @param parent\n   *   The new parent element.\n   * @param position\n   *   The position. \"end\" to append it to the parent, \"before\" to insert it before the reference element.\n   * @param target\n   *   The element to be moved.\n   * @param reference\n   *   Reference element when using \"before\" as a position value.\n   */\n  move(parent, position, target, reference) {\n    this.element.dispatchEvent(\n      createEvent({\n        operation: \"move\",\n        parent,\n        position,\n        target,\n        reference\n      })\n    );\n  }\n\n  /**\n   * Replace an element with an a new section.\n   *\n   * @param section string\n   *   The section name to replace the element with.\n   * @param target\n   *   The target dom element.\n   */\n  replace(section, target) {\n    this.element.dispatchEvent(\n      createEvent({\n        operation: \"replace\",\n        section,\n        target\n      })\n    );\n  }\n\n  /**\n   * Remove a given element.\n   *\n   * @param target\n   *   The element to remove.\n   */\n  remove(target) {\n    this.element.dispatchEvent(\n      createEvent({\n        operation: \"remove\",\n        target\n      })\n    );\n  }\n\n  /**\n   * Set attributes of an element.\n   *\n   * @param target\n   *   The target element.\n   * @param attr\n   *   The dictionary of attributes to be set.\n   */\n  attributes(target, attr) {\n    this.element.dispatchEvent(\n      createEvent({\n        operation: \"attributes\",\n        target,\n        attr\n      })\n    );\n  }\n\n  /**\n   * Remove an attribute from an element.\n   *\n   * @param target\n   *   The target element.\n   * @param key\n   *   The attribute key.\n   */\n  removeAttribute(target, key) {\n    this.element.dispatchEvent(\n      createEvent({\n        operation: \"removeAttribute\",\n        target,\n        key\n      })\n    );\n  }\n\n  /**\n   * Swap out an element with another one.\n   *\n   * @param element\n   *   The new element to insert.\n   * @param target\n   *   The old element to remove.\n   */\n  swap(element, target) {\n    this.element.dispatchEvent(\n      createEvent({\n        operation: \"swap\",\n        element,\n        target\n      })\n    );\n  }\n}\n\n/**\n * Element validation error class\n */\nexport class ElementValidationError extends Error {\n  constructor(sourceElement, message, code, payload) {\n    super(message);\n    this.code = code || null;\n    this.sourceElement = sourceElement || null;\n    this.payload = payload || {};\n  }\n}\n\n/**\n * Event type to trigger ck-editor validation event.\n */\nexport class ElementValidationErrorEvent extends CustomEvent {\n  constructor(error) {\n    super(`ck-editor:element-validation-error`, {\n      detail: error,\n      bubbles: true,\n      composed: true\n    });\n  }\n}\n\n/**\n * Event type to trigger ck-editor validation event.\n */\nexport class ElementValidationErrorResolvedEvent extends CustomEvent {\n  constructor(sourceElement) {\n    super(`ck-editor:element-validation-error-resolved`, {\n      detail: sourceElement,\n      bubbles: true,\n      composed: true\n    });\n  }\n}\n\n/**\n * Event type to communicate with an external user interface.\n */\nclass RequestInformationEvent extends CustomEvent {\n  constructor(type, payload, callback) {\n    super(`ck-editor:${type}`, {\n      detail: payload,\n      bubbles: true,\n      composed: true\n    });\n    this.callback = callback;\n  }\n\n  /**\n   * Respond to this event.\n   *\n   * @param detail\n   */\n  respond(detail) {\n    this.callback(detail);\n  }\n}\n\n/**\n * Base class for editor elements.\n *\n * Provides methods and properties for communicating with the CKEditor5 instance.\n */\nexport default class EditorElement extends LitElement {\n  /**\n   * @inheritDoc\n   */\n  constructor() {\n    super();\n    this.inEditor = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  connectedCallback() {\n    this.inEditor = !!this.closest(\".ck-editor\");\n    super.connectedCallback();\n  }\n\n  /**\n   * Change the editors document model.\n   *\n   * Pass in a callback that will receive an EditorProxy object that\n   * contains methods to modify the document.\n   *\n   * @param callback\n   */\n  modifyDocument(callback) {\n    const editorProxy = new EditorProxy(this);\n    callback(editorProxy);\n    createEvent({\n      operation: \"batch\",\n      operations: editorProxy.operations\n    });\n  }\n\n  /**\n   * Request information from outside systems.\n   *\n   * @param type String\n   *   The type of information required.\n   * @param detail Object\n   *   Arbitrary additional information.\n   * @param callback\n   *   Callback that is invoked when information is returned.\n   */\n  requestInformation(type, detail, callback) {\n    this.dispatchEvent(new RequestInformationEvent(type, detail, callback));\n  }\n\n  /**\n   * Trigger an element validation and emit validation events.\n   *\n   * @todo: provide\n   */\n  validate() {}\n\n  /**\n   * Return true if an element does not validate.\n   *\n   * @returns Boolean\n   */\n  hasError() {}\n\n  /**\n   * Instantiates an ElementValidationError.\n   *\n   * @param message\n   * @param code\n   * @param payload\n   * @returns {ElementValidationError}\n   */\n  createElementValidationError(message, code, payload) {\n    // @todo: make sure that the call stack is better and doesn't end up \"here\" instead of in the calling location.\n    return new ElementValidationError(this, message, code, payload);\n  }\n\n  /**\n   * Emits an element validation error.\n   *\n   * @param message\n   * @param code\n   * @param payload\n   * @returns {boolean}\n   */\n  emitElementValidationErrorEvent(message, code, payload) {\n    return this.dispatchEvent(\n      new ElementValidationErrorEvent(\n        this.createElementValidationError(message, code, payload)\n      )\n    );\n  }\n\n  /**\n   * Emits an element validation error resolution event.\n   *\n   * @returns {boolean}\n   */\n  emitElementValidationErrorResolvedEvent() {\n    return this.dispatchEvent(new ElementValidationErrorResolvedEvent(this));\n  }\n}\n","import global from \"global\";\nimport Placeholder from \"./placeholder\";\n\nglobal.customElements.define(\"ck-placeholder\", Placeholder);\n","import { html, svg } from \"lit-element\";\nimport styles from \"!raw-loader!./placeholder.css\";\n\nimport closeIcon from \"!raw-loader!./icons/close.svg\";\nimport carouselIcon from \"!raw-loader!./icons/carousel.svg\";\nimport formattedTextIcon from \"!raw-loader!./icons/formatted-text.svg\";\nimport imageIcon from \"!raw-loader!./icons/image.svg\";\nimport miscIcon from \"!raw-loader!./icons/misc.svg\";\nimport textIcon from \"!raw-loader!./icons/text.svg\";\nimport textMediaIcon from \"!raw-loader!./icons/text-media.svg\";\nimport twoColumnsIcon from \"!raw-loader!./icons/two-columns.svg\";\nimport videoIcon from \"!raw-loader!./icons/video.svg\";\nimport AccordionIcon from \"!raw-loader!./icons/accordion.svg\";\nimport ButtonListIcon from \"!raw-loader!./icons/button-list.svg\";\nimport EditorElement from \"../editor-element/editor-element\";\n\nconst icons = {\n  close: closeIcon,\n  formatted_text: formattedTextIcon,\n  carousel: carouselIcon,\n  media: imageIcon,\n  image: imageIcon,\n  misc: miscIcon,\n  text: textIcon,\n  text_media: textMediaIcon,\n  accordion: AccordionIcon,\n  button_list: ButtonListIcon,\n  two_columns: twoColumnsIcon,\n  video: videoIcon\n};\n\nfunction icon(section) {\n  if (section.svgIcon) {\n    return svg([section.svgIcon]);\n  }\n  if (icons[section.icon]) {\n    return svg([icons[section.icon]]);\n  }\n  return svg([icons.misc]);\n}\n\nexport default class Placeholder extends EditorElement {\n  static get properties() {\n    return {\n      collapsed: { type: Boolean },\n      closed: { type: Boolean, attribute: \"closed\" },\n      isOpen: { type: Boolean },\n      isExpanded: { type: Boolean },\n      sections: { type: String },\n      availableSections: { type: Array },\n      labelOpen: { type: String },\n      labelExpand: { type: String }\n    };\n  }\n\n  constructor() {\n    super();\n    this.closed = false;\n    this.collapsed = false;\n    this.labelOpen = \"Add\";\n    this.labelExpand = \"Insert\";\n    this.sections = [];\n    this.availableSections = [];\n    this.isOpen = false;\n    this.isExpanded = false;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.requestInformation(\"available-sections\", {}, sections => {\n      this.availableSections = sections;\n    });\n  }\n\n  getSections() {\n    return this.availableSections.filter(section =>\n      this.sections.split(\" \").includes(section.id)\n    );\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n      ${!this.collapsed || this.isExpanded\n        ? html`\n            <div class=\"ck-placeholder__add-wrapper\">\n              ${this.closed\n                ? html`\n                    <button\n                      @click=\"${this.clickOpenHandler}\"\n                      type=\"button\"\n                      class=\"normalize-button ck-placeholder__add-button\"\n                    >\n                      ${this.labelOpen}\n                    </button>\n                  `\n                : null}\n              ${!this.closed || this.isOpen\n                ? html`\n                    <ul class=\"normalize-list ck-placeholder__sections-list\">\n                      ${this.getSections().map(\n                        section => html`\n                          <li class=\"ck-placeholder__section-item\">\n                            <button\n                              @click=\"${event =>\n                                this.clickSectionHandler(event, section.id)}\"\n                              type=\"button\"\n                              class=\"normalize-button ck-placeholder__section-button\"\n                            >\n                              <div class=\"ck-placeholder__icon-wrapper\">\n                                ${icon(section)}\n                              </div>\n                              ${section.label}\n                            </button>\n                          </li>\n                        `\n                      )}\n                    </ul>\n                    ${this.isOpen\n                      ? html`\n                          <button\n                            @click=\"${this.clickCloseHandler}\"\n                            type=\"button\"\n                            class=\"normalize-button ck-placeholder__close-button\"\n                          >\n                            <div class=\"ck-placeholder__icon-wrapper\">\n                              ${icon({ icon: \"close\" })}\n                            </div>\n                            <span class=\"ck-placeholder__close-button-label\"\n                              >Close</span\n                            >\n                          </button>\n                        `\n                      : null}\n                  `\n                : \"\"}\n            </div>\n          `\n        : html`\n            <div class=\"ck-placeholder__insert-wrapper\">\n              <button\n                @click=\"${this.clickExpandHandler}\"\n                type=\"button\"\n                class=\"normalize-button ck-placeholder__insert-button\"\n              >\n                ${this.labelExpand}\n              </button>\n            </div>\n          `}\n    `;\n  }\n\n  clickOpenHandler() {\n    this.isOpen = !this.isOpen;\n  }\n\n  clickExpandHandler() {\n    this.isExpanded = !this.isExpanded;\n  }\n\n  clickCloseHandler() {\n    this.isOpen = false;\n  }\n\n  clickSectionHandler(event, sectionId) {\n    this.modifyDocument(editor => editor.replace(sectionId, this));\n    this.isExpanded = false;\n  }\n}\n","module.exports = \":host {\\n  --color-grey-light: #ccc;\\n  --color-grey-dark: #515151;\\n  background: white;\\n}\\n.option {\\n  display: flex;\\n  border-bottom: 1px solid var(--color-grey-light);\\n  cursor: pointer;\\n  align-items: center;\\n}\\n\\n.option:hover {\\n  background-color: #f6f6f6;\\n  transition: background-color .35s linear 0s;\\n}\\n\\n.option > span {\\n  padding: 5px;\\n  display: inline-block;\\n}\\n\\n.option > span.option__label {\\n  width: 150px;\\n  color: var(--color-grey-dark);\\n  padding: 25px 10px;\\n  font-size: 14px;\\n}\\n.option > span.option__content {\\n  padding: 0 20px;\\n  text-align: left;\\n}\\n::slotted(.option__info) {\\n  padding: 5px;\\n  color: var(--color-grey-dark);\\n  display: block;\\n  width: 200px;\\n  font-size: 14px;\\n  font-weight: normal;\\n}\\n\"","import global from \"global\";\nimport { LitElement, html } from \"lit-element\";\nimport styles from \"./button_conflict_option.css\";\n\nexport default class ButtonConflictOption extends LitElement {\n  static get properties() {\n    return {\n      from: { type: String },\n      content: { type: String }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // TODO: Keep span markup, but drop block elements.\n    this.content = this.innerHTML;\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n      <div class=\"option\" @click=\"${this.optionSelected}\">\n        <span class=\"option__label\">${this.from}</span>\n        <span class=\"option__content\"><slot></slot></span>\n      </div>\n    `;\n  }\n\n  optionSelected() {\n    this.dispatchEvent(\n      new CustomEvent(\"optionSelected\", {\n        detail: this.children.item(0)\n      })\n    );\n  }\n}\n\nButtonConflictOption.labels = {\n  left: \"Left version\",\n  right: \"Right version\",\n  source: \"Source version\",\n  empty: \"Clear\"\n};\n\nglobal.customElements.define(\"ck-button-option\", ButtonConflictOption);\n","import { html, svg, css } from \"lit-element\";\nimport Button from \"./button\";\nimport \"./button-conflict-option/button_conflict_option\";\n\nconst iconLink = svg`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n    <path d=\"M7.8 24c0-3.42 2.78-6.2 6.2-6.2h8V14h-8C8.48 14 4 18.48 4 24s4.48 10 10 10h8v-3.8h-8c-3.42 0-6.2-2.78-6.2-6.2zm8.2 2h16v-4H16v4zm18-12h-8v3.8h8c3.42 0 6.2 2.78 6.2 6.2s-2.78 6.2-6.2 6.2h-8V34h8c5.52 0 10-4.48 10-10s-4.48-10-10-10z\"/>\n</svg>\n`;\n\nexport default class ButtonConflict extends Button {\n  static get properties() {\n    return {\n      target: { type: String, attribute: \"link-target\" },\n      error: Boolean,\n      optionsElements: { type: String },\n      isResolving: { type: Boolean },\n      right: { type: String },\n      left: { type: String },\n      source: { type: String }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Click outside handler.\n    document.addEventListener(\"click\", e => {\n      if (!this.contains(e.target) && this.isResolving) {\n        this.isResolving = false;\n      }\n    });\n  }\n\n  resolveConflict() {\n    this.isResolving = true;\n    const left = JSON.parse(this.getAttribute(\"left\"));\n    const right = JSON.parse(this.getAttribute(\"right\"));\n    const source = JSON.parse(this.getAttribute(\"source\"));\n    const options = [];\n    if (left) {\n      options.push(ButtonConflict.getItemInfo(left, \"left\"));\n    }\n    if (right) {\n      options.push(ButtonConflict.getItemInfo(right, \"right\"));\n    }\n    if (source) {\n      options.push(ButtonConflict.getItemInfo(source, \"source\"));\n    }\n\n    this.optionsElements = options;\n  }\n\n  static getItemInfo(item, version) {\n    return {\n      version,\n      label: item.label,\n      href: item[\"link-target\"],\n      title: item.title,\n      target: item.target,\n      links: item[\"data-cta-type\"]\n    };\n  }\n\n  hasConflict() {\n    return (\n      this.hasAttribute(\"left\") ||\n      this.hasAttribute(\"source\") ||\n      this.hasAttribute(\"right\")\n    );\n  }\n\n  render() {\n    const selectFunction = this.hasConflict()\n      ? this.resolveConflict\n      : this.selectLink;\n\n    return html`\n      <div\n        class=\"button ${this.target ? \"linked\" : \"not-linked\"} ${this.error\n          ? \"error\"\n          : \"\"}\"\n      >\n        <div class=\"button__content\">\n          <slot></slot>\n        </div>\n        <button\n          @click=\"${this.inEditor ? selectFunction : () => {}}\"\n          class=\"icon ${this.hasConflict() ? \"red\" : \"\"}\"\n        >\n          ${iconLink}\n        </button>\n        ${this.hasConflict() && this.isResolving\n          ? html`\n              <div class=\"conflict-options\">\n                ${this.optionsElements.map(\n                  item => html`\n                    <ck-button-option\n                      from=${item.label}\n                      @click=${() => this.resolved(item.version)}\n                    >\n                      <div class=\"option__info\"><b>URL:</b> ${item.href}</div>\n                      <div class=\"option__info\">\n                        <b>Title:</b> ${item.title}\n                      </div>\n                      <div class=\"option__info\">\n                        <b>Target:</b> ${item.target}\n                      </div>\n                      <div class=\"option__info\">\n                        <b>Links to section:</b> ${item.links}\n                      </div>\n                    </ck-button-option>\n                  `\n                )}\n              </div>\n            `\n          : null}\n      </div>\n    `;\n  }\n\n  resolved(version) {\n    const result = JSON.parse(this.getAttribute(version));\n    this.modifyDocument(editor => {\n      editor.attributes(this, {\n        \"link-target\": result[\"link-target\"]\n      });\n      editor.attributes(this, {\n        left: null,\n        right: null,\n        source: null\n      });\n    });\n    this.isResolving = false;\n    this.optionsElements = [];\n  }\n}\n\nButtonConflict.styles = css`\n  ${Button.styles}\n  .button {\n    position: relative;\n  }\n  .conflict-options {\n    position: absolute;\n    right: 0;\n    bottom: 100%;\n    z-index: 9999;\n    max-width: 400px;\n    background: white;\n    box-shadow: 0px 0px 5px var(--color-grey-light);\n  }\n  .conflict-options {\n    display: grid;\n  }\n  .option_info {\n    padding: 10px;\n  }\n  .icon.red svg path {\n    fill: red;\n  }\n`;\n","import { html, svg, css } from \"lit-element\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nconst iconLink = svg`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n    <path d=\"M7.8 24c0-3.42 2.78-6.2 6.2-6.2h8V14h-8C8.48 14 4 18.48 4 24s4.48 10 10 10h8v-3.8h-8c-3.42 0-6.2-2.78-6.2-6.2zm8.2 2h16v-4H16v4zm18-12h-8v3.8h8c3.42 0 6.2 2.78 6.2 6.2s-2.78 6.2-6.2 6.2h-8V34h8c5.52 0 10-4.48 10-10s-4.48-10-10-10z\"/>\n</svg>\n`;\n\nexport default class Button extends EditorElement {\n  static get properties() {\n    return {\n      target: { type: String, attribute: \"link-target\" },\n      error: Boolean\n    };\n  }\n\n  hasError() {\n    return this.error;\n  }\n\n  validate() {\n    const hadError = this.error;\n\n    const target = this.target && !!this.target.toString().trim().length;\n    const innerText = !!this.innerText.trim().length;\n    // @todo: should we validate target to be a valid URL/fragment.\n    this.error = !((target && innerText) || (!target && !innerText));\n    if (!hadError && this.error) {\n      this.emitElementValidationErrorEvent(\n        \"You must provide a link target and a link text or leave both empty.\"\n      );\n    } else if (hadError && !this.error) {\n      this.emitElementValidationErrorResolvedEvent();\n    }\n  }\n\n  setupMutationObserver() {\n    /* global MutationObserver */\n    this.observer = new MutationObserver(this.validate.bind(this));\n    this.observer.observe(this, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setupMutationObserver();\n\n    // Textfield errors immediately highlighted\n    this.requestInformation(\"show-errors\", {}, showErrors => {\n      if (showErrors) {\n        this.validate();\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  updated(properties) {\n    if (properties.has(\"target\")) {\n      this.validate();\n    }\n  }\n\n  render() {\n    return html`\n      <div\n        class=\"button ${this.target ? \"linked\" : \"not-linked\"} ${this.error\n          ? \"error\"\n          : \"\"}\"\n      >\n        <div class=\"button__content\">\n          <slot></slot>\n        </div>\n        <button @click=\"${this.inEditor ? this.selectLink : () => {}}\">\n          ${iconLink}\n        </button>\n      </div>\n    `;\n  }\n\n  selectLink() {\n    const attributes = {};\n    Object.keys(this.attributes).forEach(key => {\n      if (this.hasAttribute(this.attributes[key].name)) {\n        attributes[this.attributes[key].name] = this.attributes[key].value;\n      }\n    });\n\n    this.requestInformation(\"select-link\", attributes, link => {\n      if (link.href !== null) {\n        this.modifyDocument(editor => {\n          const linkAttributes = link;\n          linkAttributes[\"link-target\"] = link.href;\n          editor.attributes(this, linkAttributes);\n        });\n      } else {\n        this.modifyDocument(editor =>\n          editor.removeAttribute(this, \"link-target\")\n        );\n      }\n    });\n  }\n}\n\nButton.styles = css`\n  :host {\n    display: inline-block;\n    --icon-size: 2em;\n    --icon-color: black;\n    --icon-position: relative;\n    --icon-left: auto;\n    --icon-top: auto;\n    --color-red: #d32323;\n    --button-background-color: #ffbb15;\n    --button-border-radius: 3em;\n    --button-border-color: transparent;\n  }\n\n  .button {\n    display: flex;\n    align-items: center;\n    font-weight: bold;\n    background: var(--button-background-color);\n    border: 1px solid var(--button-border-color);\n    border-radius: var(--button-border-radius);\n    padding: 0 1em;\n  }\n\n  .button__content {\n    width: 100%;\n  }\n\n  .button button {\n    width: var(--icon-size);\n    border: none;\n    padding: 0;\n    background: none;\n    flex-grow: 0;\n    cursor: pointer;\n    transition: transform 0.5s ease;\n    outline: none;\n    margin-left: 0.5em;\n    position: var(--icon-position);\n    left: var(--icon-left);\n    top: var(--icon-top);\n  }\n\n  .button svg {\n    width: var(--icon-size);\n    padding: 0;\n    display: block;\n    fill: var(--icon-color);\n  }\n\n  .button.not-linked svg {\n    opacity: 0.5;\n  }\n\n  .button.error {\n    box-shadow: 0 0 0 5px var(--color-red);\n  }\n`;\n","import global from \"global\";\nimport Button from \"./button\";\nimport ButtonConflict from \"./button-conflict\";\n\nglobal.customElements.define(\"ck-button\", ButtonConflict);\n","import { html } from \"lit-element\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nexport default class Container extends EditorElement {\n  static get properties() {\n    return {\n      sections: { type: String, attribute: \"ck-contains\" },\n      numberOfChildren: { type: Number },\n      max: { type: Number, attribute: \"ck-max\" },\n      min: { type: Number, attribute: \"ck-min\" },\n      closed: { type: Boolean, attribute: \"ck-closed\" },\n    };\n  }\n\n  constructor() {\n    super();\n    this.observer = null;\n    this.closed = false;\n    this.max = 0;\n    this.sections = \"\";\n  }\n\n  firstUpdated() {\n    this.processChildren();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.observer = new MutationObserver(() => this.processChildren());\n    this.observer.observe(this, {\n      attributes: true,\n      childList: true,\n      subtree: false\n    });\n\n    this.processChildren();\n  }\n\n  processChildren() {\n    this.numberOfChildren = Array.from(this.children).filter(\n      child => child.nodeName !== \"BR\"\n    ).length;\n\n    if (!this.max) {\n      this.max = 0;\n    }\n\n    if (!this.min) {\n      this.min = 0;\n    }\n\n    if (this.numberOfChildren >= this.min) {\n      Array.from(this.children).forEach((child, index) => {\n        child.dispatchEvent(\n          new CustomEvent(\"containerUpdate\", {\n            detail: {\n              inContainer: true,\n              containerSections: this.sections,\n              containerIndex: index,\n              containerMax: this.max,\n              containerItems: this.numberOfChildren || 0\n            }\n          })\n        );\n      });\n    } else {\n      const options = this.sections.split(\" \");\n      if (options.length === 1) {\n        const element = options[0];\n        this.modifyDocument(editor => {\n          for (let i = this.numberOfChildren; i < this.min; i += 1) {\n            editor.insert(element, this, \"end\");\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    return html`\n      <div class=\"container\"><slot></slot></div>\n      ${\n        this.inEditor && (this.numberOfChildren < this.max || this.max === 0)\n          ? html`\n              <ck-placeholder\n                @ckEditorOperation=\"${this.appendHandler}\"\n                ?closed=\"${!this.closed}\"\n                sections=\"${this.sections}\"\n              >\n              </ck-placeholder>\n            `\n          : null\n      }\n      </ck-placeholder>\n    `;\n  }\n\n  appendHandler(event) {\n    this.modifyDocument(editor =>\n      editor.insert(event.detail.section, this, \"end\")\n    );\n  }\n}\n","import global from \"global\";\nimport Container from \"./container\";\n\nglobal.customElements.define(\"ck-container\", Container);\n","import { html, svg } from \"lit-element\";\nimport styles from \"!raw-loader!./gallery.css\";\n\nimport leftIcon from \"!raw-loader!./icons/leftArrow.svg\";\nimport rightIcon from \"!raw-loader!./icons/rightArrow.svg\";\nimport trashIcon from \"!raw-loader!./icons/trash.svg\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nexport default class Gallery extends EditorElement {\n  static get properties() {\n    return {\n      items: Array,\n      currentItem: { type: Number, attribute: \"ck-current-item\" },\n      numberOfChildren: { type: Number },\n      maxItems: { type: Number, attribute: \"ck-max\" },\n      sections: { type: String, attribute: \"ck-contains\" },\n      controlsPosition: { type: String, attribute: \"ck-controls-position\" }\n    };\n  }\n\n  constructor() {\n    super();\n    this.items = [];\n    this.currentItem = 0;\n  }\n\n  validate() {\n    Array.from(this.children).forEach(element => {\n      if (element instanceof EditorElement) {\n        element.validate();\n      }\n    });\n  }\n\n  hasError() {\n    return (\n      this.items.filter(item => {\n        return item.error;\n      }).length > 0\n    );\n  }\n\n  getItems() {\n    return Array.from(this.children)\n      .filter(child => child.nodeName !== \"BR\")\n      .map((child, index) => ({\n        element: child,\n        error: child instanceof EditorElement && child.hasError(),\n        title: index + 1,\n        index\n      }));\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const slots = this.shadowRoot;\n    slots.addEventListener(\"slotchange\", () => {\n      this.items = this.getItems();\n      this.numberOfChildren = this.items.length;\n    });\n\n    this.maxItems = this.maxItems || 0;\n    this.items = this.getItems();\n    this.numberOfChildren = this.items.length;\n    this.setGalleryItem(this.currentItem);\n\n    // Listen to validation errors and error resolution.\n    this.addEventListener(\"ck-editor:element-validation-error\", () => {\n      // Update the items.\n      this.items = this.getItems();\n      // @todo: _stop_ propagating the error event and encapsulate it a \"group element error event\"?\n    });\n\n    this.addEventListener(\"ck-editor:element-validation-error-resolved\", () => {\n      // Update the items.\n      this.items = this.getItems();\n      // @todo: _stop_ propagating the error event and encapsulate it a \"group element error event\"?\n    });\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n\n      <div class=\"ck-gallery ${this.hasError() ? \"error\" : \"\"} ${this.controlsPosition}\">\n        <div\n          class=\"ck-gallery__rail\"\n          style=\"transform: translateX(${this.currentItem * -100}%)\"\n        >\n          <slot></slot>\n          ${this.numberOfChildren < this.maxItems || this.maxItems === 0\n            ? html`\n                <ck-placeholder\n                  @ckEditorOperation=\"${this.appendHandler}\"\n                  sections=${this.sections}\n                ></ck-placeholder>\n              `\n            : null}\n        </div>\n\n        <div class=\"ck-gallery__controls ${this.controlsPosition}\">\n          <div class=\"ck-gallery__pager\">\n            <div class=\"ck-gallery__dots\">\n              ${this.items.map(item => this.button(item))}\n              ${this.inEditor &&\n              (this.numberOfChildren < this.maxItems || this.maxItems === 0)\n                ? html`\n                    <span\n                      @click=\"${() => this.addItem()}\"\n                      class=\"ck-gallery__add ${this.currentItem ===\n                      this.numberOfChildren\n                        ? \"active\"\n                        : \"inactive\"}\"\n                    >\n                      +\n                    </span>\n                  `\n                : null}\n            </div>\n          </div>\n          ${this.inEditor\n            ? html`\n                <div class=\"ck-gallery__actions\">\n                  <span>Edit active element</span>\n                  <div class=\"ck-gallery__icons\">\n                    <div\n                      @click=\"${() => this.moveItem(\"left\")}\"\n                      data-tooltip=\"Move element to the left\"\n                      class=\"ck-gallery__icon ck-gallery__icon--arrow-left ${this\n                        .currentItem === 0 ||\n                      this.currentItem === this.items.length\n                        ? \"disabled\"\n                        : \"\"}\"\n                    >\n                      ${svg([leftIcon])}\n                    </div>\n                    <div\n                      @click=\"${() => this.moveItem(\"right\")}\"\n                      data-tooltip=\"Move element to the right\"\n                      class=\"ck-gallery__icon ck-gallery__icon--arrow-right ${this\n                        .currentItem >=\n                      this.items.length - 1\n                        ? \"disabled\"\n                        : \"\"}\"\n                    >\n                      ${svg([rightIcon])}\n                    </div>\n                    <div\n                      @click=\"${() => this.deleteItem()}\"\n                      data-tooltip=\"Delete slide\"\n                      class=\"ck-gallery__icon ck-gallery__icon--arrow-trash ${this\n                        .items.length === 0 ||\n                      this.currentItem === this.numberOfChildren\n                        ? \"disabled\"\n                        : \"\"}\"\n                    >\n                      ${svg([trashIcon])}\n                    </div>\n                  </div>\n                </div>\n              `\n            : null}\n        </div>\n      </div>\n    `;\n  }\n\n  appendHandler(event) {\n    this.modifyDocument(editor =>\n      editor.insert(event.detail.section, this, \"end\")\n    );\n  }\n\n  addItem() {\n    this.currentItem = this.items.length;\n  }\n\n  deleteItem() {\n    if (this.currentItem !== this.numberOfChildren) {\n      this.modifyDocument(editor =>\n        editor.remove(this.children[this.currentItem])\n      );\n    }\n  }\n\n  moveItem(position) {\n    if (\n      position === \"left\" &&\n      this.currentItem > 0 &&\n      this.currentItem < this.numberOfChildren\n    ) {\n      this.modifyDocument(editor =>\n        editor.move(this, \"before\", this.currentItem, this.currentItem - 1)\n      );\n      this.currentItem -= 1;\n    }\n    if (position === \"right\" && this.currentItem < this.numberOfChildren - 1) {\n      if (this.currentItem < this.numberOfChildren - 2) {\n        this.modifyDocument(editor =>\n          editor.move(this, \"before\", this.currentItem, this.currentItem + 2)\n        );\n      } else {\n        this.modifyDocument(editor =>\n          editor.move(this, \"end\", this.currentItem)\n        );\n      }\n      this.currentItem += 1;\n    }\n  }\n\n  button(item) {\n    return html`\n      <span\n        @click=\"${() => this.setGalleryItem(item.index)}\"\n        class=\"ck-gallery__dot-item ${this.currentItem === item.index\n          ? \"active\"\n          : \"\"} ${item.error ? \"error\" : \"\"}\"\n        >${item.title}</span\n      >\n    `;\n  }\n\n  setGalleryItem(index) {\n    if (this.children.length <= index || !this.children[index]) {\n      return;\n    }\n\n    // Update image slide\n    this.currentItem = index;\n  }\n}\n","import global from \"global\";\nimport Gallery from \"./gallery\";\n\nglobal.customElements.define(\"ck-gallery\", Gallery);\n","import { css } from \"lit-element\";\nimport { html, svg } from \"lit-html\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\n/**\n * Static heading element.\n */\nexport default class Heading extends EditorElement {\n\tstatic get properties() {\n\t\treturn {\n\t\t\ttext: { type: String, attribute: \"ck-text\" },\n\t\t};\n\t}\n\n\trender() {\n\t\treturn html`\n\t\t\t<style>\n\t\t\t\t:host {\n\t\t\t\t  font-family: var(--font-family, sans-serif);\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t<h3>${this.text}</h3>\n\t\t`;\n\t}\n}\n","import global from \"global\";\nimport Heading from \"./heading\";\n\nglobal.customElements.define(\"ck-heading\", Heading);\n","import global from \"global\";\nimport Media from \"./media\";\n\nglobal.customElements.define(\"ck-media\", Media);\n","import { html, svg } from \"lit-element\";\nimport styles from \"!raw-loader!./media.css\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nconst iconSelect = svg`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n`;\n\nconst iconUpload = svg`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"/></svg>\n`;\n\nconst iconEdit = svg`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n`;\n\nconst iconReset = svg`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n  <path d=\"M6,19a2.006,2.006,0,0,0,2,2h8a2.006,2.006,0,0,0,2-2V7H6ZM8,9h8V19H8Zm7.5-5-1-1h-5l-1,1H5V6H19V4Z\"/>\n</svg>\n`;\n\nconst mediaLoader = html`\n  <div class=\"ck-media__loader\">\n    <div class=\"ck-media__spinner\">\n      <div class=\"ck-media__bounce ck-media__bounce--1\"></div>\n      <div class=\"ck-media__bounce ck-media__bounce--2\"></div>\n      <div class=\"ck-media__bounce ck-media__bounce--3\"></div>\n    </div>\n  </div>\n`;\n\nexport default class Media extends EditorElement {\n  static get properties() {\n    return {\n      loaderIsVisible: Boolean,\n      mediaType: { attribute: \"data-media-type\", type: String },\n      mediaUuid: { attribute: \"data-media-uuid\", type: String },\n      mediaDisplay: { attribute: \"data-media-display\", type: String },\n      enableUpload: { attribute: \"ck-upload\", type: Boolean },\n      enableEdit: { attribute: \"ck-edit\", type: Boolean },\n      enableReset: { type: Boolean },\n      buttonPosition: { attribute: \"ck-button-position\", type: String },\n      hasValidation: { attribute: \"ck-validation\", type: String },\n      preview: String,\n      error: Boolean\n    };\n  }\n\n  validate() {\n    const hadError = this.error;\n\n    this.error = !this.mediaUuid;\n    if (!hadError && this.error) {\n      this.emitElementValidationErrorEvent(\n        \"Media is required\",\n        \"media_required\"\n      );\n    } else if (hadError && !this.error) {\n      this.emitElementValidationErrorResolvedEvent();\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Textfield errors immediately highlighted\n    this.requestInformation(\"show-errors\", {}, showErrors => {\n      if (showErrors) {\n        this.validate();\n      }\n    });\n    this.enableReset = !this.hasValidation && !!this.mediaUuid;\n  }\n\n  renderPreview() {\n    this.loaderIsVisible = true;\n    this.requestInformation(\n      \"media-preview\",\n      {\n        type: this.mediaType,\n        uuid: this.mediaUuid,\n        display: this.mediaDisplay\n      },\n      preview => {\n        this.preview = preview;\n        this.loaderIsVisible = false;\n      }\n    );\n  }\n\n  updated(properties) {\n    this.previewPane = this.shadowRoot.querySelector(\".ck-media__preview\");\n    if (properties.has(\"mediaUuid\") && this.mediaUuid) {\n      this.validate();\n      this.renderPreview();\n    }\n\n    if (properties.has(\"preview\") && this.preview) {\n      this.previewPane.innerHTML = this.preview;\n    }\n\n    this.enableReset = !this.hasValidation && !!this.mediaUuid;\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n      <div class=\"ck-media ${this.error && this.hasValidation ? \"error\" : \"no-error\"}\">\n        <div\n          class=\"ck-media__preview ${this.preview ? \"visible\" : \"hidden\"}\"\n        ></div>\n        <div\n          class=\"ck-media__placeholder ${this.preview ? \"hidden\" : \"visible\"}\"\n        ></div>\n        ${this.loaderIsVisible ? mediaLoader : null}\n        ${this.inEditor\n          ? html`\n              <div\n                class=\"ck-media__buttons ${this.buttonPosition ||\n                  \"bottom-right\"}\"\n              >\n                <button class=\"select\" @click=${this.selectHandler}>\n                  ${iconSelect}\n                </button>\n                ${this.enableUpload\n                  ? html`\n                      <button class=\"upload\" @click=${this.uploadHandler}>\n                        ${iconUpload}\n                      </button>\n                    `\n                  : null}\n                ${this.enableEdit\n                  ? html`\n                      <button class=\"edit\" @click=${this.editHandler}>\n                        ${iconEdit}\n                      </button>\n                    `\n                  : null}\n                ${this.enableReset\n                  ? html`\n                      <button class=\"reset\" @click=${this.resetHandler}>\n                        ${iconReset}\n                      </button>\n                    `\n                  : null}\n              </div>\n            `\n          : null}\n      </div>\n    `;\n  }\n\n  selectHandler() {\n    this.requestInformation(\n      \"media-select\",\n      {\n        type: this.mediaType,\n        uuid: this.mediaUuid\n      },\n      uuid => {\n        this.modifyDocument(editor => {\n          editor.attributes(this, {\n            \"data-media-uuid\": uuid\n          });\n        });\n      }\n    );\n  }\n\n  uploadHandler() {\n    this.requestInformation(\n      \"media-upload\",\n      {\n        type: this.mediaType,\n        uuid: this.mediaUuid\n      },\n      uuid => {\n        this.modifyDocument(editor => {\n          editor.attributes(this, {\n            \"data-media-uuid\": uuid\n          });\n        });\n      }\n    );\n  }\n\n  editHandler() {\n    this.requestInformation(\n      \"media-edit\",\n      {\n        type: this.mediaType,\n        uuid: this.mediaUuid\n      },\n      () => {\n        this.renderPreview();\n      }\n    );\n  }\n\n  resetHandler() {\n    this.modifyDocument(editor => {\n      editor.attributes(this, {\n        \"data-media-uuid\": \"\"\n      });\n      this.mediaUuid = \"\";\n      this.preview = \"\";\n    });\n  }\n}\n","import global from \"global\";\nimport MediaConflict from \"./media_conflict\";\nimport MediaConflictOption from \"./media_conflict_option/media_conflict_option\";\n\nglobal.customElements.define(\"ck-conflict-media\", MediaConflict);\nglobal.customElements.define(\"ck-conflict-media-option\", MediaConflictOption);\n","module.exports = \":host {\\n  display: block;\\n  width: 100%;\\n}\\n\\n.media-conflict {\\n  position: relative;\\n  overflow: hidden;\\n  background: rgba(0, 0, 0, 0.5);\\n}\\n\\n.media-conflict ::slotted(ck-conflict-media-option) {\\n  line-height: 0;\\n  display: block;\\n  pointer-events: none;\\n}\\n\\n.media-conflict ::slotted(ck-conflict-media-option:first-child) {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  overflow: hidden;\\n  z-index: 2;\\n  height: 100%;\\n  border-right: 3px solid rgb(255, 255, 255);\\n  width: 50%;\\n}\\n\\n.media-conflict ::slotted(ck-conflict-media-option:last-child) {\\n  float: right;\\n  width: 100%;\\n}\\n\"","import { html } from \"lit-element\";\nimport styles from \"./media_conflict.css\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nexport default class MediaConflict extends EditorElement {\n  static get properties() {\n    return {\n      from: { type: String }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    const children = Array.from(this.children);\n    children.forEach(item => {\n      item.addEventListener(\n        \"optionSelected\",\n        this.selectOptionHandler.bind(this)\n      );\n    });\n\n    this.children.item(0).setAttribute(\"position\", \"left\");\n    this.children.item(1).setAttribute(\"position\", \"right\");\n    this.touchStart = false;\n\n    this.addEventListener(\"mousedown\", this.touchStartHandler, false);\n    this.addEventListener(\"mouseup\", this.touchEndHandler, false);\n    this.addEventListener(\"mouseover\", this.touchEndHandler, false);\n    this.addEventListener(\"mousemove\", this.eventHandler, false);\n    this.addEventListener(\"touchmove\", this.eventHandler, false);\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n      <div class=\"media-conflict\">\n        <div class=\"media-conflict-switcher\"></div>\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  selectOptionHandler(event) {\n    this.modifyDocument(editor => editor.swap(event.detail, this));\n  }\n\n  touchStartHandler(e) {\n    this.touchStart = true;\n    this.eventHandler(e);\n  }\n\n  touchEndHandler() {\n    this.touchStart = false;\n  }\n\n  eventHandler(e) {\n    if (!this.touchStart) {\n      return;\n    }\n    const { target } = e;\n    let x = 0;\n    let totalOffsetX = 0;\n    const container = target;\n    if (container.tagName !== \"CK-CONFLICT-MEDIA\") {\n      return;\n    }\n\n    let currentElement = container;\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n    } while ((currentElement = currentElement.offsetParent));\n\n    x = e.pageX - totalOffsetX;\n\n    if (e.type === \"touchmove\") {\n      x = e.touches[0].pageX - totalOffsetX;\n    }\n\n    container.getElementsByTagName(\n      \"ck-conflict-media-option\"\n    )[0].style.width = `${x}px`;\n  }\n}\n\nMediaConflict.labels = {\n  left: \"Left version\",\n  right: \"Right version\",\n  source: \"Source version\",\n  empty: \"Clear\"\n};\n","module.exports = \"\\nbutton {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  z-index: 3;\\n  display: block;\\n  pointer-events: auto;\\n  border: none;\\n  color: white;\\n  cursor: pointer;\\n  font-family: inherit;\\n  font-size: inherit;\\n  background: rgba(0, 0, 0, 0.5);\\n  padding: 10px 20px;\\n  width: 150px;\\n}\\n\\nbutton.left {\\n  left: 0;\\n}\\n\\n.media-conflict-option {\\n  height: 100%;\\n  width: 100%;\\n}\\n\"","import { LitElement, html } from \"lit-element\";\nimport styles from \"./media_conflict_option.css\";\n\nexport default class MediaConflictOption extends LitElement {\n  static get properties() {\n    return {\n      from: { type: String },\n      position: { type: String }\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n      <div class=\"media-conflict-option\">\n        <button class=\"${this.position}\" @click=${this.optionSelected}>\n          ${this.from}\n        </button>\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  firstUpdated() {\n    if (this.position === \"left\") {\n      this.style.width = \"50%\";\n      this.shadowRoot.querySelector(\n          \".media-conflict-option\"\n        ).style.minWidth = `${this.offsetWidth * 2}px`;\n    }\n  }\n\n  optionSelected() {\n    this.dispatchEvent(\n      new CustomEvent(\"optionSelected\", {\n        detail: this.children.item(0)\n      })\n    );\n  }\n}\n","import global from \"global\";\nimport Section from \"./section\";\n\nglobal.customElements.define(\"ck-section\", Section);\n","import { css } from \"lit-element\";\nimport { html, svg } from \"lit-html\";\nimport global from \"global\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nconst iconUp = svg`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n  <g id=\"baseline-arrow_back-24px\" transform=\"translate(24) rotate(90)\">\n    <path id=\"Path_91\" data-name=\"Path 91\" d=\"M20,11H7.83l5.59-5.59L12,4,4,12l8,8,1.41-1.41L7.83,13H20Z\" fill=\"#fff\"/>\n  </g>\n</svg>\n`;\n\nconst iconDown = svg`\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n  <g id=\"baseline-arrow_forward-24px_1_\" data-name=\"baseline-arrow_forward-24px (1)\" transform=\"translate(24) rotate(90)\">\n    <path id=\"Path_93\" data-name=\"Path 93\" d=\"M12,4,10.59,5.41,16.17,11H4v2H16.17l-5.58,5.59L12,20l8-8Z\" fill=\"#fff\"/>\n  </g>\n</svg>\n`;\n\nconst iconDelete = svg`\n<svg id=\"icon_delete\" data-name=\"icon delete\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n  <path id=\"Path_84\" data-name=\"Path 84\" d=\"M5.889,17.222A1.783,1.783,0,0,0,7.667,19h7.111a1.783,1.783,0,0,0,1.778-1.778V6.556H5.889ZM7.667,8.333h7.111v8.889H7.667Zm6.667-4.444L13.444,3H9l-.889.889H5V5.667H17.444V3.889Z\" transform=\"translate(1 1)\" fill=\"#fff\"/>\n</svg>\n`;\n\nconst iconConfigure = svg`\n<svg id=\"icon_more_vertical\" data-name=\"icon more vertical\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n  <path id=\"Path_103\" data-name=\"Path 103\" d=\"M12,8a2,2,0,1,0-2-2A2.006,2.006,0,0,0,12,8Zm0,2a2,2,0,1,0,2,2A2.006,2.006,0,0,0,12,10Zm0,6a2,2,0,1,0,2,2A2.006,2.006,0,0,0,12,16Z\" fill=\"#fff\"/>\n</svg>\n`;\n\nconst iconReplace = svg`\n<svg width=\"24\" height=\"24\" fill=\"#ffffff\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n  <path d=\"M21,5v5H16V9h3.39886A7.98965,7.98965,0,0,0,4,12H3A8.99579,8.99579,0,0,1,20,7.89008V5ZM12,20a7.9958,7.9958,0,0,1-7.39886-5H8V14H3v5H4V16.10992A8.99579,8.99579,0,0,0,21,12H20A8.00909,8.00909,0,0,1,12,20Z\"></path>\n  <path d=\"M19.5,12H21A8.98578,8.98578,0,0,1,4.5,16.94177V19H3V14H8v1.5H5.38165A7.49071,7.49071,0,0,0,19.5,12Zm0-7V7.05817A8.98581,8.98581,0,0,0,3,12H4.5A7.49071,7.49071,0,0,1,18.61835,8.5H16V10h5V5Z\"></path>\n</svg>\n`;\n\n/**\n * Root element for section templates.\n *\n * Handles container movement and element diffing.\n */\nexport default class Section extends EditorElement {\n  static get properties() {\n    return {\n      // Diffing specific attributes.\n      added: { type: Boolean },\n      removed: { type: Boolean },\n\n      // Container management.\n      inContainer: { type: Boolean },\n      containerIndex: { type: Number },\n      containerMax: { type: Number },\n      containerItems: { type: Number },\n      containerSections: { type: String },\n      isHovered: { type: Boolean },\n      error: { type: Boolean },\n      replacePlaceholder: { type: String }\n    };\n  }\n\n  constructor() {\n    super();\n    this.added = false;\n    this.removed = false;\n\n    this.inContainer = false;\n    this.containerIndex = 0;\n    this.containerItems = 0;\n    this.containerSections = false;\n    this.replacePlaceholder = ``;\n\n    this.addEventListener(\"containerUpdate\", event => {\n      event.stopImmediatePropagation();\n      event.stopPropagation();\n      event.preventDefault();\n      this.containerUpdate(event);\n    });\n\n    // TODO: Decide if hovered state should be displayed for multiple elements at once.\n    // this.addEventListener(\"mouseover\", event => {\n    //   this.isHovered = true;\n    //   event.stopImmediatePropagation();\n    //   event.stopPropagation();\n    //   event.preventDefault();\n    // });\n    //\n    // this.addEventListener(\"mouseout\", event => {\n    //   this.isHovered = false;\n    // });\n\n    this.addEventListener(\"ck-editor:element-validation-error\", event => {\n      this.error = true;\n    });\n\n    this.addEventListener(\n      \"ck-editor:element-validation-error-resolved\",\n      event => {\n        this.error = false;\n      }\n    );\n  }\n\n  hasError() {\n    return this.error;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  handleAccept() {\n    if (this.added) {\n      this.modifyDocument(editor => editor.removeAttribute(this, \"added\"));\n    } else {\n      this.modifyDocument(editor => editor.remove(this));\n    }\n  }\n\n  handleDecline() {\n    if (this.removed) {\n      this.modifyDocument(editor => editor.removeAttribute(this, \"removed\"));\n    } else {\n      this.modifyDocument(editor => editor.remove(this));\n    }\n  }\n\n  get containerFirst() {\n    return this.containerIndex === 0;\n  }\n\n  get containerLast() {\n    return this.containerIndex === this.containerItems - 1;\n  }\n\n  containerUpdate({\n    detail: {\n      inContainer,\n      containerSections,\n      containerIndex,\n      containerMax,\n      containerItems\n    }\n  }) {\n    this.inContainer = inContainer;\n    this.containerSections = containerSections;\n    this.containerIndex = containerIndex;\n    this.containerMax = containerMax;\n    this.containerItems = containerItems;\n  }\n\n  upHandler() {\n    if (!this.containerFirst) {\n      const diff =\n        global.window.scrollY +\n        this.parentElement.children[this.containerIndex - 1].offsetTop -\n        this.offsetTop;\n      global.scrollTo(0, diff);\n      this.modifyDocument(editor =>\n        editor.move(\n          this.parentElement,\n          \"before\",\n          this.containerIndex,\n          this.containerIndex - 1\n        )\n      );\n    }\n  }\n\n  downHandler() {\n    if (!this.containerLast) {\n      const diff =\n        global.scrollY +\n        (this.containerIndex < this.containerItems - 2\n          ? this.parentElement.children[this.containerIndex + 2].offsetTop -\n            this.parentElement.children[this.containerIndex + 1].offsetTop\n          : this.parentElement.children[this.containerIndex + 1].offsetHeight);\n      global.scrollTo(0, diff);\n      this.modifyDocument(editor =>\n        editor.move(\n          this.parentElement,\n          \"after\",\n          this.containerIndex,\n          this.containerIndex + 1\n        )\n      );\n    }\n  }\n\n  removeHandler() {\n    this.modifyDocument(editor => editor.remove(this));\n  }\n\n  insertHandler(event) {\n    this.modifyDocument(editor =>\n      editor.insert(\n        event.detail.section,\n        this.parentElement,\n        \"before\",\n        this.containerIndex\n      )\n    );\n  }\n\n  replaceHandler(e) {\n    if (this.replacePlaceholder) {\n      this.replacePlaceholder = ``;\n    } else {\n      this.replacePlaceholder = html`\n        <ck-placeholder\n          @ckEditorOperation=\"${event => this.replaceElementHandler(event)}\"\n          sections=\"${this.containerSections}\"\n        ></ck-placeholder>\n      `;\n    }\n  }\n\n  replaceElementHandler(event) {\n    this.modifyDocument(editor =>\n      editor.insert(\n        event.detail.section,\n        this.parentElement,\n        \"before\",\n        this.containerIndex\n      )\n    );\n    this.modifyDocument(editor => editor.remove(this));\n  }\n\n  render() {\n    const upButton = html`\n      <button\n        class=\"up${this.containerFirst ? \" disabled\" : \"\"}\"\n        @click=\"${() => this.upHandler()}\"\n      >\n        ${iconUp}\n      </button>\n    `;\n\n    const downButton = html`\n      <button\n        class=\"up${this.containerLast ? \" disabled\" : \"\"}\"\n        @click=\"${() => this.downHandler()}\"\n      >\n        ${iconDown}\n      </button>\n    `;\n\n    return html`\n      <div class=\"${this.isHovered ? \"hovered\" : \"\"}\">\n        ${this.inContainer\n          ? html`\n              ${this.containerItems < this.containerMax ||\n              this.containerMax === 0\n                ? html`\n                    <ck-placeholder\n                      collapsed=\"true\"\n                      @ckEditorOperation=\"${event => this.insertHandler(event)}\"\n                      sections=\"${this.containerSections}\"\n                    ></ck-placeholder>\n                  `\n                : null}\n              ${this.added || this.removed\n                ? null\n                : html`\n                    <div class=\"controls\">\n                      ${this.containerFirst ? null : upButton}\n                      ${this.containerLast ? null : downButton}\n                      <button\n                        class=\"replace\"\n                        @click=\"${() => this.replaceHandler()}\"\n                      >\n                        ${iconReplace}\n                      </button>\n                      <button\n                        class=\"remove\"\n                        @click=\"${() => this.removeHandler()}\"\n                      >\n                        ${iconDelete}\n                      </button>\n                      <button class=\"configure disabled\">\n                        ${iconConfigure}\n                      </button>\n                    </div>\n                    <div class=\"replace-controls\">\n                      ${this.replacePlaceholder}\n                    </div>\n                  `}\n            `\n          : null}\n        <div class=\"${this.inContainer ? \"item\" : \"\"}\">\n          ${this.added || this.removed\n            ? html`\n                <div class=\"overlay ${this.added ? \"added\" : \"removed\"}\">\n                  <slot></slot>\n                  <div class=\"overlay__background\">\n                    <div class=\"actions\">\n                      <button\n                        class=\"accept\"\n                        @click=${this.handleAccept.bind(this)}\n                      >\n                        Accept\n                      </button>\n                      <button\n                        class=\"decline\"\n                        @click=${this.handleDecline.bind(this)}\n                      >\n                        Decline\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              `\n            : html`\n                <slot></slot>\n              `}\n        </div>\n      </div>\n    `;\n  }\n}\n\nSection.styles = css`\n  :host {\n    --button-size: 3em;\n    --button-background-color: black;\n    --button-foreground-color: white;\n    --outline-color: #004adc;\n    --color-light-green: rgba(91, 200, 156, 0.3);\n    --color-light-red: rgba(215, 34, 34, 0.3);\n    --color-green: #5bc89c;\n    --color-red: #d72222;\n    --highlight-padding: 0px;\n\n    position: relative;\n    display: block;\n  }\n\n  .overlay {\n    position: relative;\n  }\n\n  .overlay.removed {\n  }\n\n  .overlay__background {\n    position: absolute;\n    border: 2px solid var(--color-green);\n    top: calc(var(--highlight-padding) * -1);\n    left: calc(var(--highlight-padding) * -1);\n    bottom: calc(var(--highlight-padding) * -1);\n    right: calc(var(--highlight-padding) * -1);\n    background: var(--color-light-green);\n    z-index: 5;\n  }\n\n  .removed .overlay__background {\n    background: var(--color-light-red);\n    border: 2px solid var(--color-red);\n  }\n\n  .actions {\n    visibility: hidden;\n    opacity: 0;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 200px;\n    height: 20px;\n    margin: auto;\n  }\n\n  .overlay:hover .actions {\n    visibility: visible;\n    opacity: 1;\n    transition: visibility 0.35s linear, opacity 0.35s;\n  }\n\n  button {\n    border: none;\n    color: white;\n    cursor: pointer;\n    font-family: inherit;\n    padding: 5px 10px;\n  }\n\n  button.accept {\n    background-color: var(--color-green);\n    margin-right: 20px;\n  }\n\n  button.decline {\n    background-color: var(--color-red);\n  }\n\n  .controls {\n    z-index: 1;\n    position: absolute;\n    right: 0;\n    display: flex;\n    opacity: 0;\n    transition: opacity 0.2s ease;\n  }\n\n  .replace-controls {\n    z-index: 2;\n    position: absolute;\n    right: 0;\n    top: 76px;\n    display: flex;\n    opacity: 0;\n    transition: opacity 0.2s ease;\n  }\n\n  /* TODO: Decide if we need a hovered class or :hover is enough. */\n  :hover .item {\n    outline-style: solid;\n    outline-width: 2px;\n    outline-color: var(--outline-color);\n  }\n\n  /* TODO: Decide if we need a hovered class or :hover is enough. */\n  :hover .controls,\n  :hover .replace-controls {\n    opacity: 1;\n  }\n\n  .controls button {\n    border: none;\n    background: var(--button-background-color);\n    width: var(--button-size);\n    height: var(--button-size);\n    padding: 2px;\n    display: flex;\n    cursor: pointer;\n  }\n\n  svg {\n    width: 100%;\n  }\n\n  svg * {\n    fill: var(--button-foreground-color);\n  }\n\n  .disabled {\n    opacity: 0.5;\n    pointer-events: none;\n    cursor: auto;\n  }\n`;\n","import global from \"global\";\nimport Select from \"./select\";\n\nglobal.customElements.define(\"ck-select\", Select);\n","import { css } from \"lit-element\";\nimport { html } from \"lit-html\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nexport default class Select extends EditorElement {\n  static get properties() {\n    return {\n      options: { type: String, attribute: \"ck-options\" },\n      defaultValue: { type: String },\n      selected: { type: String, attribute: \"data-selected\" },\n      isOpen: { type: Boolean },\n      label: { type: String, attribute: \"ck-label\" }\n    };\n  }\n\n  constructor() {\n    super();\n    this.isOpen = false;\n    this.options = \"\";\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Click outside handler.\n    document.addEventListener(\"click\", e => {\n      if (!this.contains(e.target) && this.isOpen) {\n        this.isOpen = false;\n      }\n    });\n  }\n\n  handleClick() {\n    if (this.isOpen) {\n      this.isOpen = false;\n    } else {\n      this.isOpen = true;\n    }\n  }\n\n  selectItem(e) {\n    this.modifyDocument(editor => {\n      editor.attributes(this, {\n        \"data-selected\": e.target.innerText\n      });\n    });\n    this.isOpen = false;\n  }\n\n  deselectItem(e) {\n    this.modifyDocument(editor => {\n      editor.attributes(this, {\n        \"data-selected\": null\n      });\n    });\n    this.isOpen = false;\n  }\n\n  render() {\n    const options = this.options.split(\",\").map(\n      item => html`\n        <li @click=${this.selectItem}>${item}</li>\n      `\n    );\n    options.unshift(html`<li @click=${this.deselectItem}>- Select option -</li>`);\n    return html`\n      <div class=\"select-wrapper\">\n        <div class=\"label\">${this.label}</div>\n        <div class=\"selected\" @click=${this.handleClick}>\n          ${this.selected ? this.selected : \"- Select -\"}\n        </div>\n        <ul class=\"options ${this.isOpen ? \"open\" : \"closed\"}\">\n          ${options}\n        </ul>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        font-family: \"Smart\", \"Arial\", sans-serif;\n        display: inline-block;\n      }\n      .selected {\n        display: block;\n        padding: 10px 20px;\n        border: 1px solid gray;\n      }\n      .open {\n        display: block;\n      }\n      .closed {\n        display: none;\n      }\n      .options li {\n        list-style: none;\n        display: block;\n        padding: 10px 20px;\n        border-botton: 1px solid gray;\n      }\n    `;\n  }\n}\n","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\">\\n  <path\\n      d=\\\"M3,17.25V21H6.75L17.81,9.94,14.06,6.19ZM20.71,7.04a1,1,0,0,0,0-1.41L18.37,3.29a1,1,0,0,0-1.41,0L15.13,5.12l3.75,3.75,1.83-1.83Z\\\"/>\\n</svg>\\n\"","import global from \"global\";\nimport Tabs, { Modal } from \"./tabs\";\n\nglobal.customElements.define(\"ck-tabs\", Tabs);\nglobal.customElements.define(\"ck-tabs-modal\", Modal);\n","import { LitElement, html, svg } from \"lit-element\";\nimport { render } from \"lit-html\";\nimport styles from \"!raw-loader!./tabs.css\";\nimport modalStyles from \"!raw-loader!./modal.css\";\nimport editIcon from \"./icons/pencil.svg\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nexport default class Tabs extends EditorElement {\n  static get properties() {\n    return {\n      sections: { type: String, attribute: \"ck-contains\" },\n      items: Array,\n      numberOfChildren: Number,\n      currentTab: Number,\n      modalIsOpen: Boolean\n    };\n  }\n\n  constructor() {\n    super();\n    this.items = [];\n    this.currentTab = 0;\n    this.modalIsOpen = false;\n    this.section = null;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.ownerDocument.body.querySelector(\"#ck-tabs-modal\")) {\n      this.modal = this.ownerDocument.body.querySelector(\"#ck-tabs-modal\");\n    } else {\n      this.modal = this.ownerDocument.createElement(\"div\");\n      this.modal.setAttribute(\"id\", \"ck-tabs-modal\");\n      this.ownerDocument.body.appendChild(this.modal);\n    }\n\n    const observer = new MutationObserver(() => this.processItems());\n    observer.observe(this, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n\n    this.processItems();\n\n    this.numberOfChildren = Array.from(this.children).filter(\n      node => node.nodeName !== \"BR\"\n    ).length;\n    if (this.numberOfChildren > 0) {\n      this.currentTab = 0;\n    }\n  }\n\n  processItems() {\n    this.items = Array.from(this.children)\n      .filter(child => child.nodeName !== \"BR\")\n      .map((child, index) => {\n        return {\n          title:\n            (child.dataset.titleAttribute\n              ? child.getAttribute(child.dataset.titleAttribute)\n              : null) ||\n            child.dataset.tabTitle ||\n            \"Untitled Tab\",\n          default: child.dataset.defaultTab,\n          index\n        };\n      });\n    this.setTabsItem(this.currentTab);\n    this.numberOfChildren = Array.from(this.children).filter(\n      node => node.nodeName !== \"BR\"\n    ).length;\n  }\n\n  openModal() {\n    this.modalIsOpen = true;\n    render(this.renderModal(), this.modal);\n  }\n\n  closeModal() {\n    this.modalIsOpen = false;\n    render(this.renderModal(), this.modal);\n  }\n\n  renderModal() {\n    return html`\n      <ck-tabs-modal\n        @eventCloseModal=\"${() => {\n          this.closeModal();\n        }}\"\n        @eventSaveModal=\"${e => {\n          this.updateItem(e.detail);\n        }}\"\n        @deleteTab=\"${() => this.deleteItem()}\"\n        currentTitle=\"${this.items[this.currentTab].title}\"\n        currentDefault=\"${this.items[this.currentTab].default}\"\n        currentIndex=\"${this.currentTab}\"\n        data-visible=\"${this.modalIsOpen ? \"true\" : \"false\"}\"\n      >\n      </ck-tabs-modal>\n    `;\n  }\n\n  appendHandler(event) {\n    this.modifyDocument(editor =>\n      editor.insert(event.detail.section, this, \"end\")\n    );\n  }\n\n  render() {\n    return html`\n      <style>\n        ::slotted(*) {\n          display: none !important;\n        }\n        ::slotted(:nth-child(${this.currentTab + 1})) {\n          display: block !important;\n        }\n        ${styles}\n      </style>\n      <div class=\"ck-tabs\">\n        <div class=\"ck-tabs__header\">\n          <ul class=\"ck-tabs__header-tab-list\">\n            ${this.items.map(item => this.tabTitle(item))}\n            ${this.inEditor\n              ? html`\n                  <li\n                    @click=\"${() => this.addItem()}\"\n                    class=\"ck-tabs__header-tab-add\"\n                  ></li>\n                `\n              : null}\n          </ul>\n        </div>\n        <div class=\"ck-tabs__content\">\n          <slot></slot>\n          ${this.inEditor && this.currentTab === this.numberOfChildren\n            ? html`\n                <ck-placeholder\n                  @ckEditorOperation=\"${this.appendHandler}\"\n                  sections=\"${this.sections}\"\n                >\n                </ck-placeholder>\n              `\n            : null}\n        </div>\n      </div>\n    `;\n  }\n\n  tabTitle(item) {\n    return html`\n      <li\n        @click=\"${() => this.setTabsItem(item.index)}\"\n        class=\"ck-tabs__header-tab-item ${this.currentTab === item.index\n          ? \"active\"\n          : \"\"}\n        ${item.default === \"true\" ? \"default\" : \"\"}\"\n      >\n        ${item.title}\n        ${this.inEditor\n          ? html`\n              <span\n                @click=\"${() => this.openModal(item)}\"\n                class=\"ck-tabs__header-icon\"\n              >\n                ${svg([editIcon])}\n              </span>\n            `\n          : null}\n      </li>\n    `;\n  }\n\n  deleteItem() {\n    if (this.items.length >= 2) {\n      this.modifyDocument(editor =>\n        editor.remove(this.children[this.currentTab])\n      );\n      if (this.currentTab === this.items.length - 1) {\n        this.currentTab -= 1;\n      }\n    }\n  }\n\n  setTabsItem(index) {\n    if (this.children.length <= index || !this.children[index]) {\n      return;\n    }\n    this.currentTab = index;\n  }\n\n  addItem() {\n    this.currentTab = this.items.length;\n  }\n\n  updateItem(item) {\n    this.modifyDocument(editor =>\n      editor.attributes(this.children[item.index], {\n        \"data-tab-title\": item.title,\n        \"data-default-tab\": item.default\n      })\n    );\n    if (item.default) {\n      Array.from(this.children)\n        .filter(\n          child =>\n            child.dataset.defaultTab === \"true\" &&\n            child !== this.children[item.index]\n        )\n        .forEach(child =>\n          this.modifyDocument(editor =>\n            editor.attributes(child, { \"data-default-tab\": \"false\" })\n          )\n        );\n    }\n  }\n}\n\nexport class Modal extends LitElement {\n  static get properties() {\n    return {\n      isVisible: { type: Boolean, reflect: true },\n      inputText: String,\n      items: Array,\n      isDefault: Boolean,\n      currentDefault: String,\n      currentIndex: String,\n      currentTitle: String\n    };\n  }\n\n  constructor() {\n    super();\n    this.isVisible = false;\n    this.inputText = \"\";\n    this.isDefault = false;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const self = this;\n    const observer = new MutationObserver(mutationsList => {\n      mutationsList.forEach(mutation => {\n        if (mutation.type === \"attributes\") {\n          if (self.dataset.visible === \"true\") {\n            self.isVisible = true;\n            self.isDefault = self.currentDefault === \"true\";\n            self.inputText = self.currentTitle;\n          }\n        }\n      });\n    });\n\n    observer.observe(self, {\n      attributes: true,\n      childList: true,\n      subtree: false\n    });\n\n    self.isDefault = self.currentDefault === \"true\";\n    self.isVisible = self.dataset.visible === \"true\";\n  }\n\n  closeModal() {\n    this.dispatchEvent(new Event(\"eventCloseModal\"));\n    this.isVisible = false;\n  }\n\n  handleInput(e) {\n    this.inputText = e.target.value;\n  }\n\n  saveModal() {\n    const response = {\n      index: this.currentIndex,\n      title: this.inputText,\n      default: this.isDefault\n    };\n    this.dispatchEvent(new CustomEvent(\"eventSaveModal\", { detail: response }));\n    this.closeModal();\n  }\n\n  handleSwitch(e) {\n    this.isDefault = e.target.checked;\n  }\n\n  deleteTab() {\n    this.dispatchEvent(\n      new CustomEvent(\"deleteTab\", { detail: this.currentTab })\n    );\n    this.closeModal();\n  }\n\n  render() {\n    return html`\n      <style>\n        ${modalStyles}\n      </style>\n      <div class=\"modal ${this.isVisible ? \"visible\" : \"\"}\">\n        <div class=\"modal__item\">\n          <h3 class=\"modal__title\">Edit tab</h3>\n          <div class=\"modal__content\">\n            <label class=\"modal__label\" for=\"${this.currentIndex}\">\n              Variation name\n            </label>\n            <input\n              class=\"modal__input\"\n              id=\"${this.currentIndex}\"\n              @input=${this.handleInput}\n              .value=${this.currentTitle}\n            />\n            <div class=\"modal__toggle\">\n              <label class=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  .checked=\"${this.isDefault}\"\n                  @input=\"${e => this.handleSwitch(e)}\"\n                />\n                <span class=\"slider\"></span>\n              </label>\n              <span class=\"modal__toggle-label\">Set as default</span>\n            </div>\n          </div>\n          <div class=\"modal__actions\">\n            <div class=\"modal__action-wrap-delete\">\n              <span\n                class=\"modal__action modal__action--delete\"\n                @click=\"${() => this.deleteTab()}\"\n              >\n                Delete\n              </span>\n            </div>\n            <span class=\"modal__action\" @click=\"${() => this.closeModal()}\">\n              Cancel\n            </span>\n            <span\n              class=\"modal__action modal__action--primary\"\n              @click=\"${() => this.saveModal()}\"\n            >\n              save\n            </span>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n","import global from \"global\";\nimport TextConflict from \"./text_conflict\";\nimport TextConflictOption from \"./text_conflict_option/text_conflict_option\";\n\nglobal.customElements.define(\"ck-conflict-text\", TextConflict);\nglobal.customElements.define(\"ck-conflict-option\", TextConflictOption);\n","module.exports = \":host {\\n  --color-red: #ff0000;\\n  --color-grey-light: #ccc;\\n  display: block;\\n}\\n.text-conflict {\\n  position: relative;\\n}\\nspan {\\n  cursor: pointer;\\n}\\nspan.resolve {\\n  text-decoration: underline;\\n  text-decoration-color: var(--color-red);\\n}\\n.text-conflict__options {\\n  visibility: hidden;\\n  display: none;\\n  z-index: 5;\\n  opacity: 0;\\n  max-width: 100%;\\n  background: white;\\n  box-shadow: 0px 0px 5px var(--color-grey-light);\\n  border-radius: 3px;\\n  position: relative;\\n  top: 0;\\n}\\n.visible {\\n  opacity: 1;\\n  display: inline-block;\\n  visibility: visible;\\n  transform: scale(1);\\n  transition: visibility 0s linear 0s,opacity .35s 0s,transform .35s;\\n}\\n.invisible {\\n  display: none;\\n}\\n\"","import { html } from \"lit-element\";\nimport styles from \"./text_conflict.css\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nexport default class TextConflict extends EditorElement {\n  static get properties() {\n    return {\n      label: { type: String },\n      resolved: { type: Boolean },\n      isResolving: { type: Boolean }\n    };\n  }\n\n  constructor() {\n    super();\n    this.label = TextConflict.label;\n    this.resolved = false;\n    this.isResolving = false;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const children = Array.from(this.children);\n\n    children.forEach(item =>\n      item.addEventListener(\n        \"optionSelected\",\n        this.selectOptionHandler.bind(this)\n      )\n    );\n\n    // Click outside handler.\n    document.addEventListener(\"click\", e => {\n      if (!this.contains(e.target) && this.isResolving) {\n        this.isResolving = false;\n      }\n    });\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n      <div class=\"text-conflict\">\n        <span\n          class=\"text-conflict__label ${!this.resolved ? \"resolve\" : \"\"} ${this\n            .isResolving\n            ? \"invisible\"\n            : \"\"}\"\n          @click=${this.clickResolvingHandler}\n          >${this.label}</span\n        >\n        <div\n          class=\"text-conflict__options ${this.isResolving ? \"visible\" : \"\"}\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  clickResolvingHandler() {\n    this.isResolving = true;\n  }\n\n  selectOptionHandler(event) {\n    this.resolved = true;\n    this.isResolving = false;\n    this.modifyDocument(editor => editor.swap(event.detail, this));\n  }\n}\n\nTextConflict.label = \"Conflict needs resolving\";\n","module.exports = \":host {\\n  --color-grey-light: #ccc;\\n  --color-grey-dark: #515151;\\n}\\n.option {\\n  display: flex;\\n  border-bottom: 1px solid var(--color-grey-light);\\n  cursor: pointer;\\n  align-items: center;\\n}\\n\\n.option:hover {\\n  background-color: #f6f6f6;\\n  transition: background-color .35s linear 0s;\\n}\\n\\n.option > span {\\n  padding: 5px;\\n  display: inline-block;\\n}\\n\\n.option > span.option__label {\\n  width: 150px;\\n  padding: 25px 10px;\\n  font-size: 14px;\\n}\\n.option > span.option__content {\\n  padding: 0 20px;\\n  text-align: left;\\n}\\n\"","import { LitElement, html } from \"lit-element\";\nimport styles from \"./text_conflict_option.css\";\n\nexport default class TextConflictOption extends LitElement {\n  static get properties() {\n    return {\n      from: { type: String },\n      content: { type: String }\n    };\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n      <div class=\"option\" @click=\"${this.optionSelected}\">\n        <span class=\"option__label\">${this.from}</span>\n        <span class=\"option__content\"><slot></slot></span>\n      </div>\n    `;\n  }\n\n  optionSelected() {\n    this.dispatchEvent(\n      new CustomEvent(\"optionSelected\", {\n        detail: this.children.item(0)\n      })\n    );\n  }\n}\n","import global from \"global\";\nimport TextField from \"./textfield\";\n\nglobal.customElements.define(\"ck-textfield\", TextField);\n","import { LitElement, html, css } from \"lit-element\";\nimport styles from \"!raw-loader!./textfield.css\";\nimport EditorElement from \"../base/editor-element/editor-element\";\n\nexport default class TextField extends EditorElement {\n  static get properties() {\n    return {\n      pattern: { attribute: \"ck-pattern\", type: String },\n      hasPatternError: { type: Boolean },\n      errorMessage: { attribute: \"ck-error-message\", type: String },\n      minLength: { attribute: \"ck-min\", type: Number },\n      maxLength: { attribute: \"ck-max\", type: Number },\n      hasLengthError: { type: Boolean },\n      hasHelper: { type: Boolean },\n      helper: { attribute: \"ck-message-helper\", type: String }\n    };\n  }\n\n  hasError() {\n    return this.hasLengthError || this.hasPatternError;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.querySelectorAll([\"[contenteditable]\"]).forEach(el => {\n      /* global MutationObserver */\n      const observer = new MutationObserver(this.validate.bind(this));\n      observer.observe(el, {\n        childList: true,\n        subtree: true,\n        characterData: true\n      });\n\n      el.addEventListener(\"focus\", this.setHelper.bind(this));\n      el.addEventListener(\"blur\", () => {\n        this.validate();\n        this.hasHelper = false;\n      });\n\n      el.addEventListener(\"input\", this.validate.bind(this));\n    });\n\n    // Textfield errors immediately highlighted\n    this.requestInformation(\"show-errors\", {}, showErrors => {\n      if (showErrors) {\n        this.validate();\n      }\n    });\n  }\n\n  validate() {\n    const hadPatternError = this.hasPatternError;\n    const hadLengthError = this.hasLengthError;\n\n    // MAX\n    if (this.maxLength) {\n      this.maxValidation();\n    }\n    // MIN\n    if (this.minLength) {\n      this.minValidation();\n    }\n    // Range\n    if (this.maxLength && this.minLength) {\n      this.rangeValidation();\n    }\n    // Pattern\n    if (this.pattern) {\n      this.patternValidation();\n    }\n\n    // Adjust message of the helper.\n    if (this.maxLength && !this.minLength) {\n      this.helper = `${this.maxLength -\n        this.innerText.length} letters remaining.`;\n      this.setHelper();\n    }\n\n    if (!hadPatternError && this.hasPatternError) {\n      this.emitElementValidationErrorEvent(this.errorMessage, \"pattern_error\");\n    } else if (hadPatternError && !this.hasPatternError) {\n      this.emitElementValidationErrorResolvedEvent();\n    }\n\n    if (!hadLengthError && this.hasLengthError) {\n      this.emitElementValidationErrorEvent(this.errorMessage, \"length_error\");\n    } else if (hadLengthError && !this.hasLengthError) {\n      this.emitElementValidationErrorResolvedEvent();\n    }\n  }\n\n  /**\n   * The ck-* attributes are not applied immediately, so we have to watch for updates and re-validate.\n   * @param properties\n   */\n  updated(properties) {\n    if (\n      !(\n        properties.has(\"minLength\") ||\n        properties.has(\"maxLength\") ||\n        properties.has(\"pattern\")\n      )\n    ) {\n      return;\n    }\n    // Textfield errors immediately highlighted\n    this.requestInformation(\"show-errors\", {}, showErrors => {\n      if (showErrors) {\n        this.validate();\n      }\n    });\n  }\n\n  maxValidation() {\n    if (this.innerText.length > this.maxLength && !this.minLength) {\n      if (!this.errorMessage) {\n        this.errorMessage = `Please enter no more than\n          ${this.maxLength} letters.`;\n      }\n      this.hasLengthError = true;\n    } else {\n      this.hasLengthError = false;\n    }\n    this.setHelper();\n  }\n\n  minValidation() {\n    if (this.getInnerText().length < this.minLength) {\n      if (!this.errorMessage) {\n        this.errorMessage = `Please enter at least\n          ${this.minLength} letters.`;\n      }\n      this.hasLengthError = true;\n    } else {\n      this.hasLengthError = false;\n    }\n  }\n\n  rangeValidation() {\n    if (\n      this.innerText.length > this.minLength &&\n      this.innerText.length < this.maxLength\n    ) {\n      this.hasLengthError = false;\n    } else {\n      if (!this.errorMessage) {\n        this.errorMessage = `Please enter ${this.minLength} to ${\n          this.maxLength\n        } letters.`;\n      }\n      this.hasLengthError = true;\n    }\n  }\n\n  patternValidation() {\n    const pattern = new RegExp(this.pattern);\n    if (pattern.test(this.innerText)) {\n      this.hasPatternError = false;\n    } else {\n      this.hasPatternError = true;\n    }\n  }\n\n  setHelper() {\n    if (this.helper) {\n      if (!this.hasPatternError && !this.hasLengthError) {\n        this.hasHelper = true;\n      } else {\n        this.hasHelper = false;\n      }\n    }\n  }\n\n  getInnerText() {\n    // Remove whitespace.\n    return this.innerText.replace(/[\\n\\r]+|[\\s]{2,}/g, \"\");\n  }\n\n  render() {\n    return html`\n      <style>\n        ${styles}\n      </style>\n\n      <div\n        class=\"ck-textfield ${this.hasPatternError || this.hasLengthError\n          ? \"error\"\n          : \"\"}\"\n      >\n        ${this.hasHelper\n          ? html`\n              <div class=\"ck-tooltip ck-tooltip--helper\">${this.helper}</div>\n            `\n          : null}\n        ${this.hasLengthError\n          ? html`\n              <div class=\"ck-tooltip ck-tooltip--error\">\n                ${this.errorMessage ? this.errorMessage : \"Length error\"}\n              </div>\n            `\n          : null}\n        ${this.hasPatternError\n          ? html`\n              <div class=\"ck-tooltip ck-tooltip--error\">\n                ${this.errorMessage ? this.errorMessage : \"Pattern error\"}\n              </div>\n            `\n          : null}\n        <div\n          class=\"${this.hasPatternError || this.hasLengthError\n            ? \"is-valid\"\n            : \"is-invalid\"}\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\n// Static flag if textfield errors should be highlighted immediately.\n// If set to false, errors are highlighted after focus is lost for the first time.\nTextField.initializeWithErrors = false;\n","module.exports = \":host {\\n  --color-red: #d32323;\\n  --color-blue: #004adc;\\n  --color-black: #222330;\\n  --color-black-80: rgba(0, 0, 0, 0.8);\\n  --color-black-60: rgba(0, 0, 0, 0.6);\\n  --color-black-30: rgba(0, 0, 0, 0.3);\\n  --color-black-10: rgba(0, 0, 0, 0.1);\\n  --color-black-05: rgba(0, 0, 0, 0.05);\\n  --color-spinner: rgba(0, 0, 0, 0.4);\\n  --color-grey-light: #CCC;\\n  --color-white: #FFF;\\n  font-family: var(--font-family, sans-serif);\\n}\\n\\n::slotted(*) {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.ck-collapse__header {\\n  border-bottom: 1px solid var(--color-black-10);\\n  display: flex;\\n}\\n\\n.ck-collapse.open .ck-collapse__header {\\n  border-color:  var(--color-blue);\\n}\\n\\n.ck-collapse__title {\\n  padding: 15px 20px;\\n  flex: 1;\\n}\\n\\n.ck-collapse__action {\\n  position: relative;\\n  width: 50px;\\n  cursor: pointer;\\n  margin-right: 132px;\\n}\\n\\n.ck-collapse__action::after {\\n  content: '';\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-70%) rotate(45deg);\\n  right: 20px;\\n  border: solid var(--color-blue);\\n  border-width: 0 2px 2px 0;\\n  display: inline-block;\\n  padding: 3px;\\n  transition: transform 0.35s ease;\\n}\\n\\n.ck-collapse.open .ck-collapse__action::after {\\n  transform: translateY(-30%) rotate(-135deg);\\n}\\n\\n.ck-collapse__body {\\n  max-height: 0;\\n  overflow: hidden;\\n  opacity: 0;\\n  visibility: hidden;\\n  padding: 0;\\n  transition: max-height 0.2s, padding-top 0.3s, padding-bottom 0.3s,  opacity 0.3s;\\n}\\n\\n.ck-collapse.open .ck-collapse__body {\\n  max-height: 1000px;\\n  opacity: 1;\\n  visibility: visible;\\n  border: 1px solid var(--color-black-10);\\n  border-top: 0;\\n  padding: 20px;\\n}\\n\\n\\n.ck-collapse__icons {\\n  width: 100px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 0 10px;\\n  border-left: 1px solid var(--color-black-10);\\n}\\n\\n.ck-collapse__icon {\\n  cursor: pointer;\\n  width: 30px;\\n  height: 30px;\\n  border-radius: 50%;\\n  transition: background-color 0.35s ease;\\n  background-color: transparent;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.ck-collapse__icon:hover {\\n  background-color: #f0f0f0;\\n}\\n\\n.ck-collapse__icon > * {\\n  width: 14px;\\n  height: 14px;\\n}\\n\\n.ck-collapse__icon--arrow-up {\\n  transform: rotate(90deg);\\n}\\n\\n.ck-collapse__icon--arrow-down {\\n  transform: rotate(270deg);\\n}\\n\\n.disabled {\\n  opacity: 0.3;\\n}\\n\"","module.exports = \"<svg id=\\\"Layer_2\\\" data-name=\\\"Layer 2\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 18 14\\\"><defs><style>.cls-1{fill:#b8b9b9;fill-rule:evenodd;}</style></defs><title>accordion</title><path class=\\\"cls-1\\\" d=\\\"M0,12.5H18V14H0ZM0,0H18V1.5H0ZM0,10H18v1.5H0ZM0,2.5H18V9H0Z\\\"/></svg>\"","module.exports = \"<svg id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 19 14.32\\\"><defs><style>.cls-1{fill:#b8b9b9;}.cls-1,.cls-2{stroke:#b8b9b9;stroke-linejoin:round;fill-rule:evenodd;}.cls-2{fill:#fff;}</style></defs><title>button-list</title><path class=\\\"cls-1\\\" d=\\\"M1,.5H18a.5.5,0,0,1,.5.5V6a.5.5,0,0,1-.5.5H1A.5.5,0,0,1,.5,6V1A.5.5,0,0,1,1,.5Z\\\"/><path class=\\\"cls-2\\\" d=\\\"M10.33,2.18l-.66,9.58,2-1.37L13,13.82l2-.69L13.67,9.71h2.66Z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 18.862 15.09\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <g fill=\\\"currentColor\\\">\\n    <path d=\\\"m1.572 1.257h.943v12.575h-.943z\\\"/>\\n    <path d=\\\"m16.347 1.257h.943v12.575h-.943z\\\"/>\\n    <path d=\\\"m17.919 2.515h.943v10.06h-.943z\\\"/>\\n    <path d=\\\"m0 2.515h.943v10.06h-.943z\\\"/>\\n    <path d=\\\"m10 6v15.09h12.575v-15.09zm11 13.518h-9.428v-11.946h9.428z\\\" transform=\\\"translate(-6.856 -6)\\\"/>\\n  </g>\\n</svg>\\n\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n  <path fill=\\\"currentColor\\\"\\n        d=\\\"M21,6.611,19.389,5,13,11.389,6.611,5,5,6.611,11.389,13,5,19.389,6.611,21,13,14.611,19.389,21,21,19.389,14.611,13Z\\\"\\n        transform=\\\"translate(-1 -1)\\\"/>\\n  <path d=\\\"M0,0H24V24H0Z\\\" fill=\\\"none\\\"/>\\n</svg>\\n\"","module.exports = \"<svg viewBox=\\\"0 0 26 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <g fill=\\\"currentColor\\\">\\n    <path d=\\\"m295.991 66.055v-.88h-3.785v.88h1.452v14.814h-1.452v.88h3.785v-.88h-1.452v-14.814z\\\"\\n          transform=\\\"translate(-269.117 -65.175)\\\"/>\\n    <path\\n        d=\\\"m.163 100.069 4.43-10a1.728 1.728 0 0 1 1.634-1.108h.163a1.7 1.7 0 0 1 1.616 1.108l4.43 10a1.363 1.363 0 0 1 .145.563 1.325 1.325 0 0 1 -1.326 1.344 1.423 1.423 0 0 1 -1.344-.962l-.853-2h-5.59l-.89 2.088a1.373 1.373 0 0 1 -1.289.871 1.286 1.286 0 0 1 -1.289-1.305 1.483 1.483 0 0 1 .163-.599zm7.862-3.522-1.761-4.195-1.764 4.195z\\\"\\n        transform=\\\"translate(0 -87.078)\\\"/>\\n    <path\\n        d=\\\"m176.011 134.837v-.037c0-2.124 1.616-3.1 3.922-3.1a6.915 6.915 0 0 1 2.379.4v-.163c0-1.144-.708-1.779-2.088-1.779a6.328 6.328 0 0 0 -1.907.272 1.168 1.168 0 0 1 -.4.073 1.124 1.124 0 0 1 -1.144-1.126 1.144 1.144 0 0 1 .744-1.071 8.474 8.474 0 0 1 3.105-.508 4.494 4.494 0 0 1 3.287 1.089 4.242 4.242 0 0 1 1.053 3.1v4.43a1.325 1.325 0 0 1 -1.344 1.326 1.236 1.236 0 0 1 -1.325-1.144v-.018a3.742 3.742 0 0 1 -2.941 1.235c-1.834-.001-3.341-1.054-3.341-2.979zm6.337-.636v-.49a4.28 4.28 0 0 0 -1.761-.363c-1.18 0-1.906.472-1.906 1.344v.036c0 .744.617 1.18 1.507 1.18 1.288 0 2.16-.708 2.16-1.708z\\\"\\n        transform=\\\"translate(-162.103 -122.844)\\\"/>\\n  </g>\\n</svg>\\n\"","module.exports = \"<svg viewBox=\\\"0 0 17.304 13.724\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <path\\n      d=\\\"m17.005 6h-16.705a.3.3 0 0 0 -.3.3v13.125a.3.3 0 0 0 .3.3h16.705a.3.3 0 0 0 .3-.3v-13.125a.3.3 0 0 0 -.3-.3zm-12.232 3.282a1.661 1.661 0 1 1 -1.661 1.661 1.663 1.663 0 0 1 1.661-1.661zm10.96 5.572a.3.3 0 0 1 -.422.018l-3.36-3.08-2.739 3 1.434 1.434a.3.3 0 1 1 -.422.422l-3.072-3.074-4.866 4.285a.3.3 0 1 1 -.394-.448l5.077-4.47a.3.3 0 0 1 .408.013l1.414 1.416 2.922-3.2a.3.3 0 0 1 .207-.1.307.307 0 0 1 .215.078l3.58 3.282a.3.3 0 0 1 .018.423z\\\"\\n      fill=\\\"currentColor\\\" transform=\\\"translate(0 -6)\\\"/>\\n</svg>\\n\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <g fill=\\\"currentColor\\\">\\n    <path\\n        d=\\\"m158.2 149.935h-.733a.6.6 0 0 1 -.5-.392 5.813 5.813 0 0 0 -.244-.583.6.6 0 0 1 .078-.631l.522-.522a.939.939 0 0 0 0-1.326l-.847-.847a.937.937 0 0 0 -1.326 0l-.522.522a.535.535 0 0 1 -.373.134.6.6 0 0 1 -.258-.055 5.836 5.836 0 0 0 -.584-.244.6.6 0 0 1 -.392-.5v-.733a.939.939 0 0 0 -.937-.937h-1.2a.939.939 0 0 0 -.937.937v.733a.6.6 0 0 1 -.392.5 5.833 5.833 0 0 0 -.583.244.6.6 0 0 1 -.257.055.536.536 0 0 1 -.374-.134l-.521-.521a.938.938 0 0 0 -1.326 0l-.848.847a.937.937 0 0 0 0 1.326l.522.522a.6.6 0 0 1 .079.631 5.8 5.8 0 0 0 -.243.582.6.6 0 0 1 -.5.392h-.733a.939.939 0 0 0 -.937.937v1.2a.939.939 0 0 0 .937.937h.733a.6.6 0 0 1 .5.392 5.8 5.8 0 0 0 .244.582.6.6 0 0 1 -.079.631l-.522.522a.939.939 0 0 0 0 1.326l.848.848a.937.937 0 0 0 1.326 0l.522-.522a.536.536 0 0 1 .374-.134.594.594 0 0 1 .257.055 5.817 5.817 0 0 0 .583.244.6.6 0 0 1 .392.5v.733a.938.938 0 0 0 .937.937h1.2a.938.938 0 0 0 .937-.937v-.733a.6.6 0 0 1 .392-.5 5.834 5.834 0 0 0 .583-.244.6.6 0 0 1 .257-.055.536.536 0 0 1 .374.134l.522.522a.937.937 0 0 0 1.326 0l.847-.848a.939.939 0 0 0 0-1.326l-.521-.522a.6.6 0 0 1 -.079-.631 5.808 5.808 0 0 0 .244-.583.6.6 0 0 1 .5-.392h.733a.939.939 0 0 0 .937-.937v-1.2a.939.939 0 0 0 -.938-.936zm-3.971 1.536a2.747 2.747 0 1 1 -2.747-2.747 2.75 2.75 0 0 1 2.752 2.748z\\\"\\n        transform=\\\"translate(-139.142 -139.128)\\\"/>\\n    <path\\n        d=\\\"m6.871 5.006a.153.153 0 0 1 .1-.092h.367a.626.626 0 0 0 .625-.625v-.6a.626.626 0 0 0 -.625-.625h-.362a.152.152 0 0 1 -.1-.092 3.031 3.031 0 0 0 -.129-.307.149.149 0 0 1 .009-.137l.261-.261a.626.626 0 0 0 0-.884l-.427-.422a.625.625 0 0 0 -.884 0l-.261.261a.121.121 0 0 1 -.076.021.144.144 0 0 1 -.061-.012 3.033 3.033 0 0 0 -.308-.131.153.153 0 0 1 -.091-.1v-.369a.626.626 0 0 0 -.625-.625h-.6a.626.626 0 0 0 -.624.625v.369a.152.152 0 0 1 -.092.1 3.043 3.043 0 0 0 -.307.129.146.146 0 0 1 -.061.012.121.121 0 0 1 -.076-.021l-.261-.259a.625.625 0 0 0 -.884 0l-.423.423a.626.626 0 0 0 0 .884l.261.261a.149.149 0 0 1 .009.137 3.043 3.043 0 0 0 -.129.307.153.153 0 0 1 -.1.092h-.372a.626.626 0 0 0 -.625.626v.6a.626.626 0 0 0 .625.625h.367a.153.153 0 0 1 .1.092 3.022 3.022 0 0 0 .129.307.149.149 0 0 1 -.009.137l-.261.261a.625.625 0 0 0 0 .884l.423.423a.625.625 0 0 0 .884 0l.261-.261a.121.121 0 0 1 .081-.022.145.145 0 0 1 .061.012 3.04 3.04 0 0 0 .307.128.153.153 0 0 1 .092.1v.367a.626.626 0 0 0 .625.625h.6a.626.626 0 0 0 .625-.625v-.362a.152.152 0 0 1 .09-.105 3.041 3.041 0 0 0 .307-.129.145.145 0 0 1 .061-.012.121.121 0 0 1 .076.021l.261.261a.625.625 0 0 0 .884 0l.424-.418a.626.626 0 0 0 0-.884l-.261-.261a.149.149 0 0 1 -.009-.137 3.079 3.079 0 0 0 .128-.312zm-1.671-1.016a1.217 1.217 0 1 1 -1.216-1.218 1.219 1.219 0 0 1 1.216 1.218z\\\"\\n        transform=\\\"translate(0 -.006)\\\"/>\\n  </g>\\n</svg>\\n\"","module.exports = \"<svg viewBox=\\\"0 0 20.26 16.073\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <g fill=\\\"currentColor\\\">\\n    <path\\n        d=\\\"m9.229 136.932-2.307-2.307-2.336 2.335 1.814 1.813h1.181v.659h-1.319a.33.33 0 0 1 -.233-.1l-3.063-3.063-2.966 2.97v.852a.989.989 0 0 0 .989.989h7.251a.989.989 0 0 0 .989-.989zm0 0\\\"\\n        transform=\\\"translate(0 -131.852)\\\"/>\\n    <path d=\\\"m176.659 64.33a.33.33 0 1 1 -.33-.33.33.33 0 0 1 .33.33zm0 0\\\" transform=\\\"translate(-172.374 -62.682)\\\"/>\\n    <path\\n        d=\\\"m9.229.989a.989.989 0 0 0 -.989-.989h-7.251a.989.989 0 0 0 -.989.989v5.466l2.733-2.733a.33.33 0 0 1 .466 0l.921.921 2.568-2.569a.33.33 0 0 1 .466 0l2.075 2.074zm-5.274 1.648a.989.989 0 1 1 .989-.989.989.989 0 0 1 -.989.989zm0 0\\\"/>\\n    <path d=\\\"m11.109.102h9.151v1.141h-9.151z\\\"/>\\n    <path d=\\\"m0 11.51h20.26v1.141h-20.26z\\\"/>\\n    <path d=\\\"m11.109 3.525h9.151v1.141h-9.151z\\\"/>\\n    <path d=\\\"m0 14.932h12.275v1.141h-12.275z\\\"/>\\n    <path d=\\\"m11.109 6.947h9.151v1.141h-9.151z\\\"/>\\n  </g>\\n</svg>\\n\"","module.exports = \"<svg viewBox=\\\"0 0 20 18\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <path\\n      d=\\\"m91.93 13.877a2.346 2.346 0 0 1 -1.262-.334 1.217 1.217 0 0 1 -.561-.647 6.709 6.709 0 0 1 -.151-1.856v-4.253h3.928v-2.6h-3.928v-4.187h-2.363a6.615 6.615 0 0 1 -.583 2.115 4.6 4.6 0 0 1 -1.11 1.424 4.974 4.974 0 0 1 -1.673.906v2.342h1.833v5.813a4.847 4.847 0 0 0 .237 1.737 3 3 0 0 0 .853 1.133 4.394 4.394 0 0 0 1.489.809 6.34 6.34 0 0 0 2.007.292 7.809 7.809 0 0 0 1.867-.205 9.536 9.536 0 0 0 1.921-.7v-2.61a4.5 4.5 0 0 1 -2.504.821z\\\"\\n      fill=\\\"currentColor\\\" transform=\\\"translate(-84.226)\\\"/>\\n</svg>\\n\"","module.exports = \"<svg id=\\\"Layer_1\\\" data-name=\\\"Layer 1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20.26 16.07\\\"><defs><style>.cls-1{fill:#b8b8b8;}</style></defs><title>two-columns</title><rect class=\\\"cls-1\\\" y=\\\"2.28\\\" width=\\\"8.75\\\" height=\\\"1.14\\\"/><rect class=\\\"cls-1\\\" y=\\\"5.7\\\" width=\\\"8.75\\\" height=\\\"1.14\\\"/><rect class=\\\"cls-1\\\" y=\\\"9.13\\\" width=\\\"8.75\\\" height=\\\"1.14\\\"/><rect class=\\\"cls-1\\\" x=\\\"11.51\\\" y=\\\"2.28\\\" width=\\\"8.75\\\" height=\\\"1.14\\\"/><rect class=\\\"cls-1\\\" x=\\\"11.51\\\" y=\\\"5.7\\\" width=\\\"8.75\\\" height=\\\"1.14\\\"/><rect class=\\\"cls-1\\\" x=\\\"11.51\\\" y=\\\"9.13\\\" width=\\\"8.75\\\" height=\\\"1.14\\\"/><rect class=\\\"cls-1\\\" y=\\\"12.55\\\" width=\\\"8.75\\\" height=\\\"1.14\\\"/><rect class=\\\"cls-1\\\" x=\\\"11.51\\\" y=\\\"12.55\\\" width=\\\"8.75\\\" height=\\\"1.14\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 19.45 13\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <path\\n      d=\\\"m-130.878 73.4a.585.585 0 0 0 -.21-.042.5.5 0 0 0 -.378.16l-3.382 3.374v-1.385a2.328 2.328 0 0 0 -.709-1.708 2.328 2.328 0 0 0 -1.708-.709h-10.318a2.329 2.329 0 0 0 -1.708.709 2.329 2.329 0 0 0 -.709 1.708v5.909a2.328 2.328 0 0 0 .709 1.708 2.328 2.328 0 0 0 1.708.709h10.318a2.328 2.328 0 0 0 1.708-.709 2.328 2.328 0 0 0 .709-1.708v-1.394l3.382 3.382a.5.5 0 0 0 .378.159.586.586 0 0 0 .21-.042.5.5 0 0 0 .327-.5v-9.121a.5.5 0 0 0 -.327-.5z\\\"\\n      fill=\\\"currentColor\\\" transform=\\\"translate(150 -73.09)\\\"/>\\n</svg>\\n\"","module.exports = \":host {\\n  --color-blue: #004adc;\\n  --color-black: #222330;\\n  --color-grey-light: #B8B8B8;\\n  --align-buttons: left;\\n  display: block;\\n  font-family: var(--font-family, sans-serif);\\n  --transition: 0.3s ease;\\n}\\n\\nbutton {\\n  background: rgba(0, 0, 0, 0);\\n  border: none;\\n  cursor: pointer;\\n  font-family: inherit;\\n  font-size: inherit;\\n  padding: 0;\\n}\\n\\nul {\\n  list-style-type: none;\\n  width: 100%;\\n}\\n\\nul,\\nli {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.ck-placeholder__insert-wrapper {\\n  border-bottom: 1px dashed var(--color-black, #222330);\\n  font-size: 12px;\\n  line-height: 1;\\n  margin: 1em 0 2em;\\n  text-align: center;\\n  opacity: 0;\\n  transition: opacity var(--transition);\\n}\\n\\n.ck-placeholder__insert-wrapper:hover,\\n.ck-placeholder__insert-wrapper:focus {\\n  opacity: 1;\\n}\\n\\n.ck-placeholder__insert-button {\\n  background: #fff;\\n  color: var(--color-black, #222330);\\n  display: inline-block;\\n  font-size: 12px;\\n  line-height: 1;\\n  font-weight: bold;\\n  letter-spacing: 0.03em;\\n  margin: 0;\\n  padding: 0 1em;\\n  position: relative;\\n  top: 0.5em;\\n}\\n\\n\\n.ck-placeholder__insert-button:hover,\\n.ck-placeholder__insert-button:focus {\\n  color: var(--color-blue, #004adc);\\n}\\n\\n.ck-placeholder__add-wrapper {\\n  background: #f5f5f5;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  align-items: center;\\n  font-size: 14px;\\n  min-height: 80px;\\n  padding: 0.5em 1.8em 0.6em;\\n  height: 100%;\\n  transition: border var(--transition);\\n}\\n\\n.ck-placeholder__add-button {\\n  color: var(--color-black, #222330);\\n  font-weight: bold;\\n  margin-right: 40px;\\n  text-transform: uppercase;\\n}\\n\\n.ck-placeholder__add-button:hover,\\n.ck-placeholder__add-button:focus {\\n  color: var(--color-blue, #004adc);\\n}\\n\\n.ck-placeholder__sections-list {\\n  text-align: var(--align-buttons);\\n}\\n\\n.ck-placeholder__section-item {\\n  color: var(--color-black, #222330);\\n  display: inline-block;\\n  font-size: 12px;\\n  margin-right: 20px;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.ck-placeholder__icon-wrapper {\\n  color: var(--color-grey-light, #B8B8B8);\\n  margin-bottom: 8px;\\n  width: 18px;\\n}\\n\\n.ck-placeholder__section-button {\\n  align-items: center;\\n  display: flex;\\n  flex-flow: column wrap;\\n  text-transform: uppercase;\\n}\\n\\n.ck-placeholder__section-button:hover,\\n.ck-placeholder__section-button:focus {\\n  color: var(--color-blue, #004adc);\\n}\\n\\n.ck-placeholder__section-button:hover .ck-placeholder__icon-wrapper,\\n.ck-placeholder__section-button:focus .ck-placeholder__icon-wrapper {\\n  color: var(--color-blue, #004adc);\\n}\\n\\n.ck-placeholder__close-button {\\n  margin-left: auto;\\n  position: relative;\\n}\\n\\n.ck-placeholder__close-button .ck-placeholder__icon-wrapper {\\n  margin-bottom: 0;\\n}\\n\\n.ck-placeholder__close-button:hover .ck-placeholder__icon-wrapper,\\n.ck-placeholder__close-button:focus .ck-placeholder__icon-wrapper {\\n  color: var(--color-black, #222330);\\n}\\n\\n.ck-placeholder__close-button-label {\\n  left: 0;\\n  opacity: 0;\\n  position: absolute;\\n  top: 0;\\n}\\n\"","module.exports = \":host {\\n  --color-blue: #004adc;\\n  --color-black: #222330;\\n  --color-red: #d32323;\\n  --color-black-80: rgba(0, 0, 0, 0.8);\\n  --color-black-60: rgba(0, 0, 0, 0.6);\\n  --color-black-30: rgba(0, 0, 0, 0.3);\\n  --color-grey-light: #CCC;\\n  --color-white: #FFF;\\n  --align-buttons: left;\\n  font-family: var(--font-family, sans-serif);\\n  font-style: initial;\\n  font-weight: initial;\\n  --gallery-position-top: auto;\\n  --gallery-position-left: 50%;\\n  --gallery-position-right: auto;\\n  --gallery-position-bottom: 40px;\\n  --gallery-transform: translate(-50%, 0);\\n  --gallery-padding-top: 0;\\n}\\n\\n.ck-gallery {\\n  position: relative;\\n  width: 100%;\\n  display: inline-block;\\n  margin: auto;\\n  overflow: hidden;\\n  padding-top: var(--gallery-padding-top);\\n}\\n\\n.ck-gallery.below {\\n  padding-bottom: 6em;\\n}\\n\\n.ck-gallery.above {\\n  padding-top: 6em;\\n}\\n\\n.ck-gallery.error .ck-gallery__controls {\\n  border: 1px solid var(--color-red);\\n}\\n\\n.disabled {\\n  opacity: 0.3;\\n}\\n\\n.ck-gallery__rail {\\n  display: flex;\\n  transition: transform 0.7s ease;\\n}\\n\\n::slotted(*), ck-placeholder {\\n  display: block;\\n  width: 100%;\\n  flex-shrink: 0;\\n  --align-buttons: center;\\n  min-height: 300px;\\n}\\n\\n\\n.ck-gallery__controls {\\n  position: absolute;\\n  top: var(--gallery-position-top);\\n  bottom: var(--gallery-position-bottom);\\n  left: var(--gallery-position-left);\\n  right: var(--gallery-position-right);\\n  transform: var(--gallery-transform);\\n  background-color: var(--color-white);\\n  display: flex;\\n  min-width: 40px;\\n  max-height: 60px;\\n  justify-content: space-between;\\n  align-items: flex-end;\\n  padding: 10px 20px;\\n  border-radius: 10px;\\n}\\n\\n.ck-gallery__controls.below {\\n  bottom: 1.5em;\\n  top: auto;\\n}\\n\\n.ck-gallery__controls.above {\\n  top: 0;\\n}\\n\\n.ck-gallery__controls.top {\\n  top: 0;\\n}\\n\\n.ck-gallery__actions {\\n  min-width: 130px;\\n  padding-left: 20px;\\n  margin-left: 20px;\\n  border-left: 1px solid var(--color-grey-light);\\n  font-size: 14px;\\n}\\n\\n.ck-gallery__pager {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-bottom: 5px;\\n}\\n\\n.ck-gallery__dots {\\n  margin-right: 10px;\\n  display: flex;\\n}\\n\\n.ck-gallery__dot-item {\\n  display: inline-block;\\n  height: 20px;\\n  width: 20px;\\n  border-radius: 100%;\\n  margin-right: 5px;\\n  background-color: var(--color-black-30);\\n  text-align: center;\\n  line-height: 20px;\\n  color: var(--color-white);\\n  cursor: pointer;\\n  font-size: 12px;\\n  transition: background-color 0.35s ease;\\n}\\n.ck-gallery__dot-item.error {\\n  background-color: var(--color-red) !important;\\n}\\n\\n.ck-gallery__add {\\n  display: inline-block;\\n  box-sizing: border-box;\\n  height: 20px;\\n  width: 20px;\\n  border-radius: 100%;\\n  background-color: var(--color-white);\\n  text-align: center;\\n  color: var(--color-blue);\\n  line-height: 16px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  transition: background-color 0.35s ease;\\n  border: 1px solid var(--color-blue);\\n}\\n\\n.ck-gallery__add.active {\\n  background-color: var(--color-blue);\\n  color: var(--color-white);\\n}\\n\\n.ck-gallery__dot-item.active {\\n  background-color: var(--color-black-80);\\n}\\n\\n\\n.ck-gallery__add-slide:hover {\\n  background-color: var(--color-blue);\\n  color: var(--color-white);\\n}\\n\\n.ck-gallery__icons {\\n  max-width: 110px;\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 5px;\\n}\\n\\n.ck-gallery__icon {\\n  cursor: pointer;\\n  width: 30px;\\n  height: 30px;\\n  border-radius: 50%;\\n  transition: background-color 0.35s ease;\\n  background-color: transparent;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.ck-gallery__icon:hover {\\n  background-color: #f0f0f0;\\n}\\n\\n.ck-gallery__icon > * {\\n  width: 14px;\\n  height: 14px;\\n}\\n\\n[data-tooltip] {\\n  position: relative;\\n  cursor: pointer;\\n  text-align: center;\\n}\\n\\n/* Base styles for the entire tooltip */\\n[data-tooltip]:before,\\n[data-tooltip]:after {\\n  position: absolute;\\n  visibility: hidden;\\n  transition:\\n        opacity 0.2s ease-in-out,\\n        visibility 0.2s ease-in-out,\\n        transform 0.2s cubic-bezier(0.71, 1.7, 0.77, 1.24);\\n  transform: translate3d(0, 0, 0);\\n  pointer-events: none;\\n}\\n\\n.disabled[data-tooltip]:before,\\n.disabled[data-tooltip]:after {\\n  display: none;\\n}\\n\\n/* Show the entire tooltip on hover and focus */\\n[data-tooltip]:hover:before,\\n[data-tooltip]:hover:after,\\n[data-tooltip]:focus:before,\\n[data-tooltip]:focus:after {\\n  visibility: visible;\\n  opacity: 1;\\n}\\n\\n/* Base styles for the tooltip's directional arrow */\\n[data-tooltip]:before {\\n  z-index: 1001;\\n  border: 6px solid transparent;\\n  background: transparent;\\n  content: \\\"\\\";\\n}\\n\\n/* Base styles for the tooltip's content area */\\n[data-tooltip]:after {\\n  z-index: 1000;\\n  padding: 8px;\\n  display: inline-block;\\n  width: 160px;\\n  background-color: var(--color-black-60);\\n  color: var(--color-white);\\n  content: attr(data-tooltip);\\n  font-size: 13px;\\n  line-height: 1;\\n}\\n\\n/* Horizontally align top/bottom tooltips */\\n[data-tooltip]:after {\\n  margin-left: -80px;\\n}\\n\\n[data-tooltip]:hover:before,\\n[data-tooltip]:hover:after,\\n[data-tooltip]:focus:before,\\n[data-tooltip]:focus:after {\\n  transform: translateY(-12px);\\n}\\n\\n\\n[data-tooltip]:before,\\n[data-tooltip]:after {\\n  top: 80%;\\n  bottom: auto;\\n  left: 50%;\\n}\\n\\n[data-tooltip]:before {\\n  margin-top: -12px;\\n  margin-left: -6px;\\n  margin-bottom: 0;\\n  border-top-color: transparent;\\n  border-bottom-color: var(--color-black-60);\\n}\\n\\n[data-tooltip]:hover:before,\\n[data-tooltip]:hover:after,\\n[data-tooltip]:focus:before,\\n[data-tooltip]:focus:after {\\n  transform: translateY(12px);\\n}\\n\\n\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\">\\n  <path d=\\\"M20,11H7.83l5.59-5.59L12,4,4,12l8,8,1.41-1.41L7.83,13H20Z\\\"/>\\n</svg>\\n\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\">\\n  <path d=\\\"M12,4,10.59,5.41,16.17,11H4v2H16.17l-5.58,5.59L12,20l8-8Z\\\"/>\\n</svg>\\n\"","module.exports = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\">\\n  <path d=\\\"M6,19a2.006,2.006,0,0,0,2,2h8a2.006,2.006,0,0,0,2-2V7H6ZM8,9h8V19H8Zm7.5-5-1-1h-5l-1,1H5V6H19V4Z\\\"/>\\n</svg>\\n\"","module.exports = \":host {\\n  --color-red: #d32323;\\n  --color-blue: #004adc;\\n  --color-black: #222330;\\n  --color-black-80: rgba(0, 0, 0, 0.8);\\n  --color-black-60: rgba(0, 0, 0, 0.6);\\n  --color-black-30: rgba(0, 0, 0, 0.3);\\n  --color-black-10: rgba(0, 0, 0, 0.1);\\n  --color-black-05: rgba(0, 0, 0, 0.05);\\n  --color-spinner: rgba(0, 0, 0, 0.4);\\n  --color-grey-light: #CCC;\\n  --color-white: #FFF;\\n  --align-buttons: left;\\n  --height-ratio: 50%;\\n  font-family: var(--font-family, sans-serif);\\n  --button-padding: 5px;\\n}\\n\\nimg {\\n  display: block;\\n  height: auto !important;\\n}\\n\\n* {\\n  max-width: 100%;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\n.ck-media {\\n  width: 100%;\\n  border: 1px solid var(--color-black-10);\\n  position: relative;\\n}\\n\\n.ck-media__placeholder {\\n  width: 100%;\\n  padding-bottom: var(--height-ratio);\\n  background: repeating-linear-gradient(\\n  45deg,\\n  var(--color-white),\\n  var(--color-white) 30px,\\n  var(--color-grey-light) 30px,\\n  var(--color-grey-light) 60px\\n  );\\n}\\n\\n.ck-media.error {\\n  border: 1px solid var(--color-red);\\n}\\n\\n.ck-media.error .ck-media__placeholder {\\n  width: 100%;\\n  padding-bottom: var(--height-ratio);\\n  background: repeating-linear-gradient(\\n      45deg,\\n      var(--color-white),\\n      var(--color-white) 30px,\\n      var(--color-red) 30px,\\n      var(--color-red) 60px\\n  );\\n}\\n\\n.ck-media__preview {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.ck-media__loader {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n\\nck-media-loader {\\n  opacity: 1;\\n  visibility: visible;\\n  transition: all 0.2s ease;\\n  pointer-events: none;\\n}\\n\\n.ck-media__spinner {\\n  width: 100px;\\n  text-align: center;\\n}\\n\\n.ck-media__spinner > .ck-media__bounce {\\n  width: 16px;\\n  height: 16px;\\n  background-color: var(--color-spinner);\\n\\n  border-radius: 100%;\\n  display: inline-block;\\n  -webkit-animation: ck-bounce 1.4s infinite ease-in-out both;\\n  animation: ck-bounce 1.4s infinite ease-in-out both;\\n}\\n\\n.ck-media__spinner .ck-media__bounce--1 {\\n  -webkit-animation-delay: -0.32s;\\n  animation-delay: -0.32s;\\n}\\n\\n.ck-media__spinner .ck-media__bounce--2 {\\n  -webkit-animation-delay: -0.16s;\\n  animation-delay: -0.16s;\\n}\\n\\n@-webkit-keyframes ck-bounce {\\n  0%, 80%, 100% { -webkit-transform: scale(0) }\\n  40% { -webkit-transform: scale(1.0) }\\n}\\n\\n@keyframes ck-bounce {\\n  0%, 80%, 100% {\\n    -webkit-transform: scale(0);\\n    transform: scale(0);\\n  } 40% {\\n    -webkit-transform: scale(1.0);\\n    transform: scale(1.0);\\n  }\\n}\\n\\n.ck-media {\\n  position: relative;\\n}\\n\\n.ck-media__buttons {\\n  position: absolute;\\n  display: flex;\\n}\\n\\n.ck-media__buttons button {\\n  display: block;\\n  outline: none;\\n  border: none;\\n  width: 30px;\\n  height: 30px;\\n  padding: 5px;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n\\n.ck-media__buttons button:not(:last-child) {\\n  margin-right: 5px;\\n}\\n\\n.ck-media__buttons svg {\\n  margin-top: -1px;\\n  display: block;\\n}\\n\\n.top-left {\\n  top: var(--button-padding);\\n  left: 5px;\\n}\\n\\n.top {\\n  top: var(--button-padding);\\n  width: 100%;\\n  justify-content: center;\\n}\\n\\n.top-right {\\n  top: var(--button-padding);\\n  right: var(--button-padding);\\n}\\n\\n.right {\\n  top: 0;\\n  right: var(--button-padding);\\n  height: 100%;\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n\\n.bottom-right {\\n  bottom: var(--button-padding);\\n  right: var(--button-padding);\\n}\\n\\n.bottom {\\n  bottom: var(--button-padding);\\n  width: 100%;\\n  justify-content: center;\\n}\\n\\n.bottom-left {\\n  bottom: var(--button-padding);\\n  left: var(--button-padding);\\n}\\n\\n.left {\\n  top: 0;\\n  left: var(--button-padding);\\n  height: 100%;\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n\\n\\n.ck-media__buttons button {\\n  background: rgba(255, 255, 255, 0.5);\\n  transition: 0.3s ease;\\n  border: none;\\n}\\n\\n.ck-media__buttons button:hover{\\n  background: rgba(255, 255, 255, 0.8);\\n  transform: scale(1.2);\\n  border: none;\\n}\\n\"","module.exports = \":host {\\n  --color-blue: #004adc;\\n  --color-blue-60: rgba(0, 74, 220, 0.6);\\n  --color-black: #222330;\\n  --color-black-80: rgba(0, 0, 0, 0.8);\\n  --color-black-60: rgba(0, 0, 0, 0.6);\\n  --color-black-30: rgba(0, 0, 0, 0.3);\\n  --color-grey-light: #CCC;\\n  --color-white: #FFF;\\n  --font-size-small: 12px;\\n  --font-size-text: 16px;\\n  --baseline: 8px;\\n  --baseline2: 16px;\\n  --baseline3: 24px;\\n  --baseline4: 32px;\\n  --baseline5: 40px;\\n  font-family: var(--font-family, sans-serif);\\n}\\n\\n.modal {\\n  position: fixed;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: var(--color-black-30);\\n  opacity: 0;\\n  visibility: hidden;\\n  transform: scale(1.1);\\n  transition: visibility 0s linear .35s,opacity .35s 0s,transform .35s;\\n  z-index: 1;\\n}\\n.visible {\\n  opacity: 1;\\n  visibility: visible;\\n  transform: scale(1);\\n  transition: visibility 0s linear 0s,opacity .35s 0s,transform .35s;\\n}\\n\\n.modal__item {\\n  background-color: var(--color-white);\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  border-radius: 4px;\\n  min-width: 300px;\\n  box-shadow: 0px 5px 40px 1px rgba(0,0,0,0.35);\\n}\\n\\n.modal__content, .modal__actions, .modal__title {\\n  padding: var(--baseline2);\\n}\\n\\n.modal__actions {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n\\n.modal__action {\\n  text-transform: uppercase;\\n  cursor: pointer;\\n  margin-left: 20px;\\n  font-size: var(--font-size-small);\\n}\\n\\n.modal__action--primary {\\n  color: var(--color-blue);\\n}\\n\\n.modal__action-wrap-delete {\\n  flex: 1;\\n}\\n\\n.modal__action--delete {\\n  margin: 0;\\n  transition: 0.35s color ease;\\n}\\n\\n.modal__action--delete:hover {\\n  color: red;\\n}\\n\\n.modal__title {\\n  font-size: var(--font-size-text);\\n  background-color: var(--color-blue);\\n  color: var(--color-white);\\n  margin: 0;\\n  border-top-left-radius: 4px; \\n  border-top-right-radius: 4px; \\n}\\n\\n.modal__button-container {\\n  text-align: right;\\n}\\n\\n.modal__label {\\n  font-size: var(--font-size-small);\\n  color: var(--color-black-30);\\n}\\n\\n.modal__input {\\n  margin: 5px 0 20px 0;\\n  display: block;\\n  border: none;\\n  border-bottom: 1px solid  var(--color-black-30);\\n  padding: 5px 0;\\n  outline: none;\\n  width: 100%;\\n  transition: border-color 0.35s;\\n  font-size: var(--font-size-text);\\n}\\n\\n.modal__input:focus {\\n  border-color: var(--color-blue);\\n}\\n\\n.modal__toggle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.modal__toggle-label {\\n  margin-left: 15px;\\n  font-size: var(--font-size-small);\\n}\\n\\n/* The switch - the box around the slider */\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 30px;\\n  height: 8px;\\n}\\n\\n/* Hide default HTML checkbox */\\n.switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\n\\n/* The slider */\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: var(--color-black-30);\\n  transition: all 0.35s ease;\\n  border-radius: 20px;\\n}\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 15px;\\n  width: 15px;\\n  left: 0px;\\n  bottom: -3px;\\n  background-color: var(--color-white);\\n  transition: all 0.35s ease;\\n  box-shadow: 0px 3px 15px 0px rgba(0,0,0,0.3);\\n  border-radius: 50%;\\n}\\n\\ninput:checked + .slider {\\n  background-color: var(--color-blue-60);\\n}\\n\\n\\ninput:checked + .slider:before {\\n  transform: translateX(15px);\\n  background-color: var(--color-blue);\\n}\\n\"","module.exports = \":host {\\n  --color-blue: #004adc;\\n  --color-black: #222330;\\n  --color-black-80: rgba(0, 0, 0, 0.8);\\n  --color-black-60: rgba(0, 0, 0, 0.6);\\n  --color-black-30: rgba(0, 0, 0, 0.3);\\n  --color-grey-light: #CCC;\\n  --color-white: #FFF;\\n  --font-size-text: 16px;\\n  --baseline: 8px;\\n  --baseline2: 16px;\\n  --baseline3: 24px;\\n  --baseline4: 32px;\\n  --baseline5: 40px;\\n  font-style: initial;\\n  font-weight: initial;\\n  font-family: var(--font-family, sans-serif);\\n}\\n\\n.ck-tabs {\\n  width: 100%;\\n  display: block;\\n  margin: auto;\\n}\\n\\n.ck-tabs__header-tab-list {\\n  list-style: none;\\n  display: flex;\\n  padding-left: 0;\\n  border-bottom: 1px solid var(--color-grey-light);\\n}\\n\\n\\n.ck-tabs__header-tab-item {\\n  padding: 0 var(--baseline3) 0 var(--baseline3);\\n  border-bottom: 1px solid var(--color-grey-light);\\n  margin-bottom: -1px;\\n  cursor: pointer;\\n  position: relative;\\n  font-size: var(--font-size-text);\\n  position: relative;\\n}\\n\\n.ck-tabs__header-icon {\\n  height: 0;\\n  width: 0;\\n  cursor: pointer;\\n  opacity: 0;\\n  visibility: hidden;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n}\\n\\n.ck-tabs__header-tab-item.active {\\n  border-bottom: 2px solid var(--color-blue);\\n  color: var(--color-blue);\\n  font-weight: bold;\\n  cursor: default;\\n}\\n\\n.ck-tabs__header-tab-item.active .ck-tabs__header-icon {\\n  width: var(--baseline2);\\n  height: var(--baseline2);\\n}\\n\\n.ck-tabs__header-tab-item.active:hover .ck-tabs__header-icon {\\n  opacity: 1;\\n  visibility: visible;\\n}\\n\\n.ck-tabs__header-tab-item.default:before {\\n  content: '*';\\n  margin-right: 5px;\\n  font-size: 19px;\\n  height: var(--baseline2);\\n  position: absolute;\\n  left: 5px;\\n  top: 0;\\n}\\n\\n.ck-tabs__header-tab-add {\\n  margin-left: var(--baseline3);\\n  cursor: pointer;\\n  height: 20px;\\n  width: 20px;\\n  background-color: var(--color-black-80);\\n  text-align: center;\\n  color: var(--color-white);\\n  border-radius: 50%;\\n  transition: background-color 0.35s ease;\\n  position: relative;\\n  margin-bottom: 15px;\\n}\\n\\n.ck-tabs__header-tab-add::before {\\n  content: '+';\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -54%)\\n}\\n\\n.ck-tabs__header-tab-add:hover {\\n  background-color: var(--color-blue);\\n}\\n\\n::slotted(*) {\\n  display: block;\\n  width: 100%;\\n  flex-shrink: 0;\\n}\\n\"","module.exports = \":host {\\n  --color-red: #d32323;\\n  --color-black: #222330;\\n  --color-black-80: rgba(0, 0, 0, 0.8);\\n  --color-black-60: rgba(0, 0, 0, 0.6);\\n  --color-black-15: rgba(0, 0, 0, 0.15);\\n  --color-grey-light: #CCC;\\n  --color-white: #FFF;\\n  --align-buttons: left;\\n  --font-size-small: 14px;\\n  --font-size-text: 16px;\\n  --baseline: 8px;\\n  --baseline2: 16px;\\n  position: relative;\\n  display: block;\\n  outline: none;\\n}\\n\\n.ck-textfield {\\n  position: relative;\\n  margin-top: 40px;\\n}\\n.ck-textfield:before, .ck-textfield:after {\\n  content: '';\\n  display: table;\\n  clear: both;\\n}\\n\\n.ck-textfield.error {\\n  outline: 1px solid var(--color-red);\\n}\\n\\n.ck-tooltip {\\n  font-family: var(--font-family, sans-serif);\\n  font-style: initial;\\n  font-weight: initial;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  transform: translate(-1px, -100%);\\n  padding: var(--baseline) var(--baseline2);\\n  border-radius: var(--baseline);\\n  border-bottom-left-radius: 0;\\n  font-size: var(--font-size-small);\\n}\\n\\n.ck-tooltip--error {\\n  background-color: var(--color-red);\\n  color: var(--color-white);\\n}\\n\\n.ck-tooltip--helper {\\n  transform: translate(0, -100%);\\n  background-color: var(--color-white);\\n  box-shadow: 0px 0px 3px 1px var(--color-black-15);\\n}\\n\"","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import \"../components/components/base/placeholder/index\";\nimport \"../components/components/container/index\";\nimport \"../components/components/section/index\";\nimport \"../components/components/gallery/index\";\nimport \"../components/components/tabs/index\";\nimport \"../components/components/button/index\";\nimport \"../components/components/text_conflict/index\";\nimport \"../components/components/media_conflict/index\";\nimport \"../components/components/media/index\";\nimport \"../components/components/textfield/index\";\nimport \"../components/components/accordion/index\";\nimport \"../components/components/select/index\";\nimport \"../components/components/heading/index\";\n\n"],"sourceRoot":""}